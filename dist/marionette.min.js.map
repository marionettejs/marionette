{"version":3,"file":"marionette.min.js","sources":["../utils/proxy.js","../utils/extend.js","../version.js","../modules/common/normalize-methods.js","../utils/error.js","../modules/common/bind-events.js","../modules/common/bind-requests.js","../modules/common/get-option.js","../modules/common/merge-options.js","../modules/common/monitor-view-events.js","../modules/common/trigger-method.js","../utils/build-event-args.js","../utils/call-handler.js","../utils/once-wrap.js","../mixins/events.js","../modules/common/radio.js","../utils/make-callback.js","../mixins/requests.js","../mixins/common.js","../mixins/destroy.js","../modules/radio.js","../mixins/radio.js","../modules/object.js","../mixins/behaviors.js","../mixins/delegate-entity-events.js","../mixins/template-render.js","../mixins/ui.js","../config/features.js","../config/event-delegator.js","../mixins/view-events.js","../config/dom.js","../mixins/view.js","../modules/common/view.js","../modules/region.js","../modules/common/build-region.js","../mixins/regions.js","../config/renderer.js","../modules/view.js","../modules/child-view-container.js","../modules/collection-view.js","../modules/behavior.js","../modules/application.js","../index.js"],"sourcesContent":["//Internal utility for creating context style global utils\nconst proxy = function(method) {\n  return function(context, ...args) {\n    return method.apply(context, args);\n  };\n};\n\nexport default proxy;\n","// Marionette.extend\n// -----------------\n\nimport { has, extend, create } from 'underscore';\n\n// Borrowed from backbone.js\nexport default function(protoProps, staticProps) {\n  const parent = this;\n  let child;\n\n  // The constructor function for the new subclass is either defined by you\n  // (the \"constructor\" property in your `extend` definition), or defaulted\n  // by us to simply call the parent constructor.\n  if (protoProps && has(protoProps, 'constructor')) {\n    child = protoProps.constructor;\n  } else {\n    child = function() { return parent.apply(this, arguments); };\n  }\n\n  // Add static properties to the constructor function, if supplied.\n  extend(child, parent, staticProps);\n\n  // Set the prototype chain to inherit from `parent`, without calling\n  // `parent`'s constructor function and add the prototype properties.\n  child.prototype = create(parent.prototype, protoProps);\n  child.prototype.constructor = child;\n\n  // Set a convenience property in case the parent's prototype is needed\n  // later.\n  child.__super__ = parent.prototype;\n\n  return child;\n}\n","var version = \"5.0.0-alpha.2\";\n\nexport { version };\n","import { reduce, isFunction } from 'underscore';\n\n// Marionette.normalizeMethods\n// ----------------------\n\n// Pass in a mapping of events => functions or function names\n// and return a mapping of events => functions\nconst normalizeMethods = function(hash) {\n  if (!hash) { return }\n\n  return reduce(hash, (normalizedHash, method, name) => {\n    if (!isFunction(method)) {\n      method = this[method];\n    }\n    if (method) {\n      normalizedHash[name] = method;\n    }\n    return normalizedHash;\n  }, {});\n};\n\nexport default normalizeMethods;\n","// Error\n// -----\n\nimport { extend as _extend, pick } from 'underscore';\nimport extend from './extend';\nimport {version} from '../version';\n\nconst errorProps = ['description', 'fileName', 'lineNumber', 'name', 'message', 'number', 'url'];\n\nconst MarionetteError = extend.call(Error, {\n  urlRoot: `http://marionettejs.com/docs/v${version}/`,\n\n  url: '',\n\n  constructor(options) {\n    const error = Error.call(this, options.message);\n    _extend(this, pick(error, errorProps), pick(options, errorProps));\n\n    if (Error.captureStackTrace) {\n      this.captureStackTrace();\n    }\n\n    this.url = this.urlRoot + this.url;\n  },\n\n  captureStackTrace() {\n    Error.captureStackTrace(this, MarionetteError);\n  },\n\n  toString() {\n    return `${ this.name }: ${ this.message } See: ${ this.url }`;\n  }\n});\n\nexport default MarionetteError;\n","// Bind Entity Events & Unbind Entity Events\n// -----------------------------------------\n//\n// These methods are used to bind/unbind a backbone \"entity\" (e.g. collection/model)\n// to methods on a target object.\n//\n// The first parameter, `target`, must have the Backbone.Events module mixed in.\n//\n// The second parameter is the `entity` (Backbone.Model, Backbone.Collection or\n// any object that has Backbone.Events mixed in) to bind the events from.\n//\n// The third parameter is a hash of { \"event:name\": \"eventHandler\" }\n// configuration. Multiple handlers can be separated by a space. A\n// function can be supplied instead of a string handler name.\n\nimport { isObject } from 'underscore';\nimport normalizeMethods from './normalize-methods';\nimport MarionetteError from '../../utils/error';\n\nfunction normalizeBindings(context, bindings) {\n  if (!isObject(bindings)) {\n    throw new MarionetteError({\n      message: 'Bindings must be an object.',\n      url: 'common.html#bindevents'\n    });\n  }\n\n  return normalizeMethods.call(context, bindings);\n}\n\nfunction bindEvents(entity, bindings) {\n  if (!entity || !bindings) { return this; }\n\n  this.listenTo(entity, normalizeBindings(this, bindings));\n\n  return this;\n}\n\nfunction unbindEvents(entity, bindings) {\n  if (!entity) { return this; }\n\n  if (!bindings) {\n    this.stopListening(entity);\n    return this;\n  }\n\n  this.stopListening(entity, normalizeBindings(this, bindings));\n\n  return this;\n}\n\n// Export Public API\nexport {\n  bindEvents,\n  unbindEvents\n};\n","// Bind/Unbind Radio Requests\n// -----------------------------------------\n//\n// These methods are used to bind/unbind a backbone.radio request\n// to methods on a target object.\n//\n// The first parameter, `target`, will set the context of the reply method\n//\n// The second parameter is the `Radio.channel` to bind the reply to.\n//\n// The third parameter is a hash of { \"request:name\": \"replyHandler\" }\n// configuration. A function can be supplied instead of a string handler name.\n\nimport { isObject } from 'underscore';\nimport normalizeMethods from './normalize-methods';\nimport MarionetteError from '../../utils/error';\n\nfunction normalizeBindings(context, bindings) {\n  if (!isObject(bindings)) {\n    throw new MarionetteError({\n      message: 'Bindings must be an object.',\n      url: 'common.html#bindrequests'\n    });\n  }\n\n  return normalizeMethods.call(context, bindings);\n}\n\nfunction bindRequests(channel, bindings) {\n  if (!channel || !bindings) { return this; }\n\n  channel.reply(normalizeBindings(this, bindings), this);\n\n  return this;\n}\n\nfunction unbindRequests(channel, bindings) {\n  if (!channel) { return this; }\n\n  if (!bindings) {\n    channel.stopReplying(null, null, this);\n    return this;\n  }\n\n  channel.stopReplying(normalizeBindings(this, bindings));\n\n  return this;\n}\n\nexport {\n  bindRequests,\n  unbindRequests\n};\n","// Marionette.getOption\n// --------------------\n\n// Retrieve an object, function or other value from the\n// object or its `options`, with `options` taking precedence.\nconst getOption = function(optionName) {\n  if (!optionName) { return; }\n  if (this.options && (this.options[optionName] !== undefined)) {\n    return this.options[optionName];\n  } else {\n    return this[optionName];\n  }\n};\n\nexport default getOption;\n","import { each } from 'underscore';\n\n// Merge `keys` from `options` onto `this`\nconst mergeOptions = function(options, keys) {\n  if (!options) { return; }\n\n  each(keys, (key) => {\n    const option = options[key];\n    if (option !== undefined) {\n      this[key] = option;\n    }\n  });\n};\n\nexport default mergeOptions;\n","// DOM Refresh\n// -----------\n\nimport { each } from 'underscore';\n\n// Trigger method on children unless a pure Backbone.View\nfunction triggerMethodChildren(view, event, shouldTrigger) {\n  if (!view._getImmediateChildren) { return; }\n  each(view._getImmediateChildren(), child => {\n    if (!shouldTrigger(child)) { return; }\n    child.triggerMethod(event, child);\n  });\n}\n\nfunction shouldTriggerAttach(view) {\n  return !view._isAttached;\n}\n\nfunction shouldAttach(view) {\n  if (!shouldTriggerAttach(view)) { return false; }\n  view._isAttached = true;\n  return true;\n}\n\nfunction shouldTriggerDetach(view) {\n  return view._isAttached;\n}\n\nfunction shouldDetach(view) {\n  view._isAttached = false;\n  return true;\n}\n\nfunction triggerDOMRefresh(view) {\n  if (view._isAttached && view._isRendered) {\n    view.triggerMethod('dom:refresh', view);\n  }\n}\n\nfunction triggerDOMRemove(view) {\n  if (view._isAttached && view._isRendered) {\n    view.triggerMethod('dom:remove', view);\n  }\n}\n\nfunction handleBeforeAttach() {\n  triggerMethodChildren(this, 'before:attach', shouldTriggerAttach);\n}\n\nfunction handleAttach() {\n  triggerMethodChildren(this, 'attach', shouldAttach);\n  triggerDOMRefresh(this);\n}\n\nfunction handleBeforeDetach() {\n  triggerMethodChildren(this, 'before:detach', shouldTriggerDetach);\n  triggerDOMRemove(this);\n}\n\nfunction handleDetach() {\n  triggerMethodChildren(this, 'detach', shouldDetach);\n}\n\nfunction handleBeforeRender() {\n  triggerDOMRemove(this);\n}\n\nfunction handleRender() {\n  triggerDOMRefresh(this);\n}\n\n// Monitor a view's state, propagating attach/detach events to children and firing dom:refresh\n// whenever a rendered view is attached or an attached view is rendered.\nfunction monitorViewEvents(view) {\n  if (view._areViewEventsMonitored || view.monitorViewEvents === false) { return; }\n\n  view._areViewEventsMonitored = true;\n\n  view.on({\n    'before:attach': handleBeforeAttach,\n    'attach': handleAttach,\n    'before:detach': handleBeforeDetach,\n    'detach': handleDetach,\n    'before:render': handleBeforeRender,\n    'render': handleRender\n  });\n}\n\nexport default monitorViewEvents;\n","// Trigger Method\n// --------------\n\nimport { isFunction } from 'underscore';\nimport getOption from './get-option';\n\n// split the event name on the \":\"\nconst splitter = /(^|:)(\\w)/gi;\n\n// Only calc getOnMethodName once\nconst methodCache = {};\n\n// take the event section (\"section1:section2:section3\")\n// and turn it in to uppercase name onSection1Section2Section3\nfunction getEventName(match, prefix, eventName) {\n  return eventName.toUpperCase();\n}\n\nconst getOnMethodName = function(event) {\n  if (!methodCache[event]) {\n    methodCache[event] = 'on' + event.replace(splitter, getEventName);\n  }\n\n  return methodCache[event];\n};\n\n// Trigger an event and/or a corresponding method name. Examples:\n//\n// `this.triggerMethod(\"foo\")` will trigger the \"foo\" event and\n// call the \"onFoo\" method.\n//\n// `this.triggerMethod(\"foo:bar\")` will trigger the \"foo:bar\" event and\n// call the \"onFooBar\" method.\nexport default function triggerMethod(event, ...args) {\n  // get the method name from the event name\n  const methodName = getOnMethodName(event);\n  const method = getOption.call(this, methodName);\n  let result;\n\n  // call the onMethodName if it exists\n  if (isFunction(method)) {\n    // pass all args, except the event name\n    result = method.apply(this, args);\n  }\n\n  // trigger the event\n  this.trigger.apply(this, arguments);\n\n  return result;\n}\n","import { reduce, keys } from 'underscore';\n\n// Regular expression used to split event strings.\nexport const eventSplitter = /\\s+/;\n\n// Iterates over the standard `event, callback` (as well as the fancy multiple\n// space-separated events `\"change blur\", callback` and jQuery-style event\n// maps `{event: callback}`).\nexport default function buildEventArgs(name, callback, context, listener) {\n  if (name && typeof name === 'object') {\n    return reduce(keys(name), (eventArgs, key) => {\n      return eventArgs.concat(buildEventArgs(key, name[key], context || callback, listener));\n    }, []);\n  }\n\n  if (name && eventSplitter.test(name)) {\n    return reduce(name.split(eventSplitter), (eventArgs, n) => {\n      eventArgs.push({ name: n, callback, context, listener });\n      return eventArgs;\n    }, []);\n  }\n\n  return [{ name, callback, context, listener }];\n}\n","// An optimized way to execute callbacks.\nexport default function callHandler(callback, context, args = []) {\n  switch (args.length) {\n    case 0: return callback.call(context);\n    case 1: return callback.call(context, args[0]);\n    case 2: return callback.call(context, args[0], args[1]);\n    case 3: return callback.call(context, args[0], args[1], args[2]);\n    default: return callback.apply(context, args);\n  }\n}\n","import { once } from 'underscore';\n\n// Wrap callback in a once. Returns for requests\n// `offCallback` unbinds the `onceWrapper` after it has been called.\nexport default function onceWrap(callback, offCallback) {\n  const onceCallback = once(function() {\n    offCallback(onceCallback);\n    return callback.apply(this, arguments);\n  });\n\n  onceCallback._callback = callback;\n\n  return onceCallback;\n}\n","import { reduce, each, keys, uniqueId } from 'underscore';\n\nimport buildEventArgs, { eventSplitter } from '../utils/build-event-args';\nimport callHandler from '../utils/call-handler';\nimport onceWrap from '../utils/once-wrap';\n\nimport triggerMethod from '../modules/common/trigger-method';\n\n// A module that can be mixed in to *any object* in order to provide it with\n// a custom event channel. You may bind a callback to an event with `on` or\n// remove with `off`; `trigger`-ing an event fires all callbacks in\n// succession.\n//\n//     var object = {};\n//     _.extend(object, Events);\n//     object.on('expand', function(){ alert('expanded'); });\n//     object.trigger('expand');\n//\n\n// The reducing API that adds a callback to the `events` object.\nconst onApi = function({ events, name, callback, context, ctx, listener }) {\n  const handlers = events[name] || (events[name] = []);\n  handlers.push({ callback, context, ctx: context || ctx, listener });\n  return events;\n};\n\nconst onReducer = function(events, { name, callback, context }) {\n  if (!callback) {return events;}\n  return onApi({ events, name, callback, context, ctx: this });\n}\n\nconst onceReducer = function(events, { name, callback, context }) {\n  if (!callback) {return events;}\n  const onceCallback = onceWrap(callback, this.off.bind(this, name));\n  return onApi({ events, name, callback: onceCallback, context, ctx: this });\n}\n\nconst cleanupListener = function({ obj, listeneeId, listenerId, listeningTo }) {\n  delete listeningTo[listeneeId];\n  delete obj._rdListeners[listenerId];\n};\n\n// The reducing API that removes a callback from the `events` object.\nconst offReducer = function(events , { name, callback, context }) {\n  const names = name ? [name] : keys(events);\n\n  each(names, key => {\n    const handlers = events[key];\n\n    // Bail out if there are no events stored.\n    if (!handlers) {return;}\n\n    // Find any remaining events.\n    events[key] = reduce(handlers, (remaining, handler) => {\n      if (\n        callback && callback !== handler.callback &&\n          callback !== handler.callback._callback ||\n            context && context !== handler.context\n      ) {\n        remaining.push(handler);\n        return remaining;\n      }\n\n      // If not including event, clean up any related listener\n      if (handler.listener) {\n        const listener = handler.listener;\n        listener.count--;\n        if (!listener.count) {cleanupListener(listener);}\n      }\n\n      return remaining;\n    }, []);\n\n    if (!events[key].length) {delete events[key];}\n  });\n\n  return events;\n};\n\nconst getListener = function(obj, listenerObj) {\n  const listeneeId = obj._rdListenId || (obj._rdListenId = uniqueId('l'));\n  obj._rdEvents = obj._rdEvents || {};\n  const listeningTo = listenerObj._rdListeningTo || (listenerObj._rdListeningTo = {});\n  const listener = listeningTo[listeneeId];\n\n  // This listenerObj is not listening to any other events on `obj` yet.\n  // Setup the necessary references to track the listening callbacks.\n  if (!listener) {\n    const listenerId = listenerObj._rdListenId || (listenerObj._rdListenId = uniqueId('l'));\n    listeningTo[listeneeId] = {obj, listeneeId, listenerId, listeningTo, count: 0};\n\n    return listeningTo[listeneeId];\n  }\n\n  return listener;\n}\n\nconst listenToApi = function({ name, callback, context, listener }) {\n  if (!callback) {return;}\n\n  const { obj, listenerId } = listener;\n  const listeners = obj._rdListeners || (obj._rdListeners = {});\n  obj._rdEvents = onApi({ events: obj._rdEvents, name, callback, context, listener });\n  listeners[listenerId] = listener;\n  listener.count++;\n\n  // Call `on` for interop\n  obj.on(name, callback, context, { _rdInternal: true });\n};\n\nconst listenToOnceApi = function({ name, callback, context, listener }) {\n  if (!callback) {return;}\n  const offCallback = this.stopListening.bind(this, listener.obj, name);\n  const onceCallback = onceWrap(callback, offCallback);\n  listenToApi({ name, callback: onceCallback, context, listener });\n};\n\n// Handles triggering the appropriate event callbacks.\nconst triggerApi = function({ events, name, args }) {\n  const objEvents = events[name];\n  const allEvents = (objEvents && events.all) ? events.all.slice() : events.all;\n  if (objEvents) {triggerEvents(objEvents, args);}\n  if (allEvents) {triggerEvents(allEvents, [name].concat(args));}\n};\n\nconst triggerEvents = function(events, args) {\n  each(events, ({ callback, ctx }) => {\n    callHandler(callback, ctx, args);\n  });\n};\n\nexport default {\n\n  // Bind an event to a `callback` function. Passing `\"all\"` will bind\n  // the callback to all events fired.\n  on(name, callback, context, opts) {\n    if (opts && opts._rdInternal) {return;}\n\n    const eventArgs = buildEventArgs(name, callback, context);\n    this._rdEvents = reduce(eventArgs, onReducer.bind(this), this._rdEvents || {});\n\n    return this;\n  },\n\n  // Remove one or many callbacks. If `context` is null, removes all\n  // callbacks with that function. If `callback` is null, removes all\n  // callbacks for the event. If `name` is null, removes all bound\n  // callbacks for all events.\n  off(name, callback, context, opts) {\n    if (!this._rdEvents) {return this;}\n    if (opts && opts._rdInternal) {return;}\n\n    // Delete all event listeners and \"drop\" events.\n    if (!name && !context && !callback) {\n      this._rdEvents = void 0;\n      const listeners = this._rdListeners;\n      each(keys(listeners), listenerId => {\n        cleanupListener(listeners[listenerId]);\n      });\n      return this;\n    }\n\n    const eventArgs = buildEventArgs(name, callback, context);\n\n    this._rdEvents = reduce(eventArgs, offReducer, this._rdEvents);\n\n    return this;\n  },\n\n  // Bind an event to only be triggered a single time. After the first time\n  // the callback is invoked, its listener will be removed. If multiple events\n  // are passed in using the space-separated syntax, the handler will fire\n  // once for each event, not once for a combination of all events.\n  once(name, callback, context) {\n    const eventArgs = buildEventArgs(name, callback, context);\n\n    this._rdEvents = reduce(eventArgs, onceReducer.bind(this), this._rdEvents || {})\n\n    return this;\n  },\n\n  // Inversion-of-control versions of `on`. Tell *this* object to listen to\n  // an event in another object... keeping track of what it's listening to\n  // for easier unbinding later.\n  listenTo(obj, name, callback) {\n    if (!obj) {return this;}\n\n    const listener = getListener(obj, this);\n    const eventArgs = buildEventArgs(name, callback, this, listener);\n    each(eventArgs, listenToApi);\n\n    return this;\n  },\n\n  // Inversion-of-control versions of `once`.\n  listenToOnce(obj, name, callback) {\n    if (!obj) {return this;}\n\n    const listener = getListener(obj, this);\n    const eventArgs = buildEventArgs(name, callback, this, listener);\n    each(eventArgs, listenToOnceApi.bind(this));\n\n    return this;\n  },\n\n  // Tell this object to stop listening to either specific events ... or\n  // to every object it's currently listening to.\n  stopListening(obj, name, callback) {\n    const listeningTo = this._rdListeningTo;\n    if (!listeningTo) {return this;}\n\n    const eventArgs = buildEventArgs(name, callback, this);\n\n    const listenerIds = obj ? [obj._rdListenId] : keys(listeningTo);\n    for (let i = 0; i < listenerIds.length; i++) {\n      const listener = listeningTo[listenerIds[i]];\n\n      // If listening doesn't exist, this object is not currently\n      // listening to obj. Break out early.\n      if (!listener) {break;}\n\n      each(eventArgs, args => {\n        const listenToObj = listener.obj;\n        const events = listenToObj._rdEvents;\n\n        if (!events) {return;}\n\n        listenToObj._rdEvents = offReducer(events, args);\n\n        // Call `off` for interop\n        listenToObj.off(args.name, args.callback, this, { _reInternal: true });\n      });\n    }\n\n    return this;\n  },\n\n  // Trigger one or many events, firing all bound callbacks. Callbacks are\n  // passed the same arguments as `trigger` is, apart from the event name\n  // (unless you're listening on `\"all\"`, which will cause your callback to\n  // receive the true name of the event as the first argument).\n  trigger(name, ...args) {\n    if (!this._rdEvents) {return this;}\n\n    if (name && typeof name === 'object') {\n      each(keys(name), key => {\n        triggerApi({\n          events: this._rdEvents,\n          name: key,\n          args: [name[key]],\n        });\n      });\n    }\n\n    if (name && eventSplitter.test(name)) {\n      each(name.split(eventSplitter), n => {\n        triggerApi({\n          events: this._rdEvents,\n          name: n,\n          args,\n        });\n      });\n      return this;\n    }\n\n    triggerApi({\n      events: this._rdEvents,\n      name,\n      args,\n    });\n\n    return this;\n  },\n\n  triggerMethod,\n};\n","\n\n// Whether or not we're in debug mode or not. debug mode helps you\n// get around the issues of lack of warnings when events are mis-typed.\nlet shouldDebug = false;\n\nfunction setDebug(setShouldDebug = true) {\n  shouldDebug = setShouldDebug;\n}\n\n// Format debug text.\nfunction debugText(warning, eventName, channelName) {\n  return warning + (channelName ? ` on the ${ channelName } channel` : '') +\n    `: \"${ eventName }\"`;\n}\n\n// This is the method that's called when an unregistered event was called.\n// By default, it logs warning to the console. By overriding this you could\n// make it throw an Error, for instance. This would make firing a nonexistent event\n// have the same consequence as firing a nonexistent method on an Object.\nfunction debugLog(warning, eventName, channelName) {\n  if (shouldDebug && console && console.warn) {\n    console.warn(debugText(warning, eventName, channelName));\n  }\n}\n\n// Log information about the channel and event\nfunction log(channelName, eventName, ...args) {\n  if (typeof console === 'undefined') { return; }\n  console.log(`[${ channelName }] \"${ eventName }\"`, args);\n}\n\nexport {\n  setDebug,\n  debugLog,\n  log,\n};\n","// If callback is not a function return the callback and flag it for removal\nexport default function makeCallback(callback) {\n  if (typeof callback === 'function') {\n    return callback;\n  }\n  const result = function() { return callback; };\n  result._callback = callback;\n  return result;\n}\n","import { each, extend, keys, reduce } from 'underscore';\n\nimport { debugLog, log } from '../modules/common/radio';\nimport buildEventArgs, { eventSplitter } from '../utils/build-event-args';\nimport callHandler from '../utils/call-handler';\nimport makeCallback from '../utils/make-callback';\nimport onceWrap from '../utils/once-wrap';\n\n/*\n * Requests\n * -----------------------\n * A messaging system for requesting data.\n *\n */\n\nconst replyReducer = function(isOnce, requests, { name, callback, context }) {\n  if (requests[name]) {\n    debugLog('A request was overwritten', name, this.channelName);\n  }\n\n  requests[name] = {\n    callback: isOnce ? onceWrap(makeCallback(callback), this.stopReplying.bind(this, name)) : makeCallback(callback),\n    context: context || this,\n  };\n\n  return requests;\n};\n\nconst stopReducer = function(requests, { name, callback, context }) {\n  const names = name ? [name] : keys(requests);\n\n  each(names, key => {\n    const handler = requests[key];\n\n    // Bail out if there are no events stored.\n    if (\n      !handler ||\n        callback && callback !== handler.callback &&\n          callback !== handler.callback._callback ||\n            context && context !== handler.context\n    ) {\n      // Radio.debugLog('Attempted to remove the unregistered request', name, this.channelName);\n      return;\n    }\n\n    delete requests[key];\n  });\n\n  return requests;\n};\n\nexport default {\n\n  // Set up a handler for a request\n  reply(name, callback, context) {\n    const eventArgs = buildEventArgs(name, callback, context);\n\n    this._rdRequests = reduce(eventArgs, replyReducer.bind(this, false), this._rdRequests || {});\n\n    return this;\n  },\n\n  // Set up a handler that can only be requested once\n  replyOnce(name, callback, context) {\n    const eventArgs = buildEventArgs(name, callback, context);\n\n    this._rdRequests = reduce(eventArgs, replyReducer.bind(this, true), this._rdRequests || {});\n\n    return this;\n  },\n\n  // Remove handler(s)\n  stopReplying(name, callback, context) {\n    if (!this._rdRequests) {return this;}\n\n    if (!name && !callback && !context) {\n      delete this._rdRequests;\n      return this;\n    }\n\n    const eventArgs = buildEventArgs(name, callback, context);\n    this._rdRequests = reduce(eventArgs, stopReducer.bind(this), this._rdRequests || {});\n\n    return this;\n  },\n\n  // Make a request\n  request(name, ...args) {\n    if (name && typeof name === 'object') {\n      return reduce(keys(name), (replies, key) => {\n        const result = this.request(key, name[key]);\n        eventSplitter.test(key) ? extend(replies, result) : replies[key] = result;\n        return replies;\n      }, {});\n    }\n\n    if (name && eventSplitter.test(name)) {\n      return reduce(name.split(eventSplitter), (replies, n) => {\n        replies[n] = this.request(n, ...args);\n        return replies;\n      }, {});\n    }\n\n    const channelName = this.channelName;\n    const requests = this._rdRequests;\n\n    // // Check if we should log the request, and if so, do it\n    if (channelName && this._tunedIn) {\n      log.apply(this, [channelName, name].concat(args));\n    }\n\n    // If the request isn't handled, log it in DEBUG mode and exit\n    if (requests && (requests[name] || requests.default)) {\n      const handler = requests[name] || requests.default;\n      args = requests[name] ? args : arguments;\n      return callHandler(handler.callback, handler.context, args);\n    }\n\n    debugLog('An unhandled request was fired', name, channelName);\n  },\n};\n","import { extend, result } from 'underscore';\n\nimport EventsMixin from './events';\nimport RequestsMixin from './requests';\nimport getOption from '../modules/common/get-option';\nimport mergeOptions from '../modules/common/merge-options';\nimport normalizeMethods from '../modules/common/normalize-methods';\nimport triggerMethod from '../modules/common/trigger-method';\nimport {\n  bindEvents,\n  unbindEvents\n} from '../modules/common/bind-events';\nimport {\n  bindRequests,\n  unbindRequests\n} from '../modules/common/bind-requests';\n\nconst CommonMixin = {\n\n  // This is a noop method intended to be overridden\n  initialize() {},\n\n  // Imports the \"normalizeMethods\" to transform hashes of\n  // events=>function references/names to a hash of events=>function references\n  normalizeMethods,\n\n  _setOptions(options, classOptions) {\n    this.options = extend({}, result(this, 'options'), options);\n    this.mergeOptions(options, classOptions);\n  },\n\n  // A handy way to merge passed-in options onto the instance\n  mergeOptions,\n\n  // Enable getting options from this or this.options by name.\n  getOption,\n\n  // Enable binding view's events from another entity.\n  bindEvents,\n\n  // Enable unbinding view's events from another entity.\n  unbindEvents,\n\n  // Enable binding view's requests.\n  bindRequests,\n\n  // Enable unbinding view's requests.\n  unbindRequests,\n\n  triggerMethod\n};\n\nextend(CommonMixin, EventsMixin, RequestsMixin);\n\nexport default CommonMixin;\n","export default {\n  _isDestroyed: false,\n\n  isDestroyed() {\n    return this._isDestroyed;\n  },\n\n  destroy(options) {\n    if (this._isDestroyed) { return this; }\n\n    this.triggerMethod('before:destroy', this, options);\n    this._isDestroyed = true;\n    this.triggerMethod('destroy', this, options);\n    this.stopListening();\n\n    return this;\n  }\n};\n","import { each, extend, keys } from 'underscore';\n\nimport { setDebug, debugLog, log } from './common/radio';\nimport Events from '../mixins/events';\nimport Requests from '../mixins/requests';\n\nimport callHandler from '../utils/call-handler';\n\nconst _logs = {};\n\n// This is to produce an identical function in both tuneIn and tuneOut,\n// so that Events unregisters it.\nfunction _partial(channelName) {\n  return _logs[channelName] || (_logs[channelName] = log.bind(Radio, channelName));\n}\n\nconst Radio = {};\n\nextend(Radio, {\n  setDebug,\n\n  log,\n\n  debugLog,\n\n  // Logs all events on this channel to the console. It sets an\n  // internal value on the channel telling it we're listening,\n  // then sets a listener on the Events\n  tuneIn(channelName) {\n    const channel = Radio.channel(channelName);\n    channel._tunedIn = true;\n    channel.on('all', _partial(channelName));\n    return this;\n  },\n\n  // Stop logging all of the activities on this channel to the console\n  tuneOut(channelName) {\n    const channel = Radio.channel(channelName);\n    channel._tunedIn = false;\n    channel.off('all', _partial(channelName));\n    delete _logs[channelName];\n    return this;\n  }\n});\n\n/*\n * Radio.channel\n * ----------------------\n * Get a reference to a channel by name.\n *\n */\n\nRadio._channels = {};\n\nRadio.channel = function(channelName) {\n  if (!channelName) {\n    throw new Error('You must provide a name for the channel.');\n  }\n\n  if (Radio._channels[channelName]) {\n    return Radio._channels[channelName];\n  }\n\n  return (Radio._channels[channelName] = new Radio.Channel(channelName));\n};\n\n/*\n * Radio.Channel\n * ----------------------\n * A Channel is an object that extends from Events,\n * and Radio.Requests.\n *\n */\n\nRadio.Channel = function(channelName) {\n  this.channelName = channelName;\n};\n\nextend(Radio.Channel.prototype, Events, Requests, {\n\n  // Remove all handlers from the messaging systems of this channel\n  reset() {\n    this.off();\n    this.stopListening();\n    this.stopReplying();\n    return this;\n  },\n});\n\n/*\n * Top-level API\n * -------------\n * Supplies the 'top-level API' for working with Channels directly\n * from Radio.\n *\n */\n\neach([Events, Requests], system => {\n  each(keys(system), methodName => {\n    Radio[methodName] = function(channelName, ...args) {\n      const channel = this.channel(channelName);\n      return callHandler(channel[methodName], channel, args);\n    };\n  });\n});\n\nRadio.reset = function(channelName) {\n  const channels = !channelName ? this._channels : [this._channels[channelName]];\n  each(channels, channel => { channel.reset(); });\n};\n\nexport default Radio;\n","import { result } from 'underscore';\nimport Radio from '../modules/radio';\n\n\n// MixinOptions\n// - channelName\n// - radioEvents\n// - radioRequests\n\nexport default {\n\n  _initRadio() {\n    const channelName = result(this, 'channelName');\n\n    if (!channelName) {\n      return;\n    }\n\n    const channel = this._channel = Radio.channel(channelName);\n\n    const radioEvents = result(this, 'radioEvents');\n    this.bindEvents(channel, radioEvents);\n\n    const radioRequests = result(this, 'radioRequests');\n    this.bindRequests(channel, radioRequests);\n\n    this.on('destroy', this._destroyRadio);\n  },\n\n  _destroyRadio() {\n    this._channel.stopReplying(null, null, this);\n  },\n\n  getChannel() {\n    return this._channel;\n  }\n};\n","// Object\n// ------\n\nimport { extend as _extend, uniqueId } from 'underscore';\nimport extend from '../utils/extend';\nimport CommonMixin from '../mixins/common';\nimport DestroyMixin from '../mixins/destroy';\nimport RadioMixin from '../mixins/radio';\n\nconst ClassOptions = [\n  'channelName',\n  'radioEvents',\n  'radioRequests'\n];\n\n// Object borrows many conventions and utilities from Backbone.\nconst MarionetteObject = function(options) {\n  this._setOptions(options, ClassOptions);\n  this.cid = uniqueId(this.cidPrefix);\n  this._initRadio();\n  this.initialize.apply(this, arguments);\n};\n\nMarionetteObject.extend = extend;\n\n// Object Methods\n// --------------\n\n_extend(MarionetteObject.prototype, CommonMixin, DestroyMixin, RadioMixin, {\n  cidPrefix: 'mno',\n});\n\nexport default MarionetteObject;\n","import { isFunction, extend, reduce, result, without, map } from 'underscore';\nimport MarionetteError from '../utils/error';\n\n// MixinOptions\n// - behaviors\n\n// Takes care of getting the behavior class\n// given options and a key.\n// If a user passes in options.behaviorClass\n// default to using that.\n// If a user passes in a Behavior Class directly, use that\n// Otherwise an error is thrown\nfunction getBehaviorClass(options) {\n  if (options.behaviorClass) {\n    return { BehaviorClass: options.behaviorClass, options };\n  }\n\n  //treat functions as a Behavior constructor\n  if (isFunction(options)) {\n    return { BehaviorClass: options, options: {} };\n  }\n\n  throw new MarionetteError({\n    message: 'Unable to get behavior class. A Behavior constructor should be passed directly or as behaviorClass property of options',\n    url: 'marionette.behavior.html#defining-and-attaching-behaviors'\n  });\n}\n\n// Iterate over the behaviors object, for each behavior\n// instantiate it and get its grouped behaviors.\n// This accepts a list of behaviors in either an object or array form\nfunction parseBehaviors(view, behaviors, allBehaviors) {\n  return reduce(behaviors, (reducedBehaviors, behaviorDefiniton) => {\n    const { BehaviorClass, options } = getBehaviorClass(behaviorDefiniton);\n    const behavior = new BehaviorClass(options, view);\n    reducedBehaviors.push(behavior);\n\n    return parseBehaviors(view, result(behavior, 'behaviors'), reducedBehaviors);\n  }, allBehaviors);\n}\n\nexport default {\n  _initBehaviors() {\n    this._behaviors = parseBehaviors(this, result(this, 'behaviors'), []);\n  },\n\n  _getBehaviorTriggers() {\n    const triggers = map(this._behaviors, behavior => behavior._getTriggers());\n    return reduce(triggers, function(memo, _triggers) {\n      return extend(memo, _triggers);\n    }, {});\n  },\n\n  _getBehaviorEvents() {\n    const events = map(this._behaviors, behavior => behavior._getEvents());\n    return reduce(events, function(memo, _events) {\n      return extend(memo, _events);\n    }, {});\n  },\n\n  // proxy behavior el to the view's el.\n  _setBehaviorElements() {\n    map(this._behaviors, behavior => behavior.setElement());\n  },\n\n  // delegate modelEvents and collectionEvents\n  _delegateBehaviorEntityEvents() {\n    map(this._behaviors, behavior => behavior.delegateEntityEvents());\n  },\n\n  // undelegate modelEvents and collectionEvents\n  _undelegateBehaviorEntityEvents() {\n    map(this._behaviors, behavior => behavior.undelegateEntityEvents());\n  },\n\n  _destroyBehaviors(options) {\n    // Call destroy on each behavior after\n    // destroying the view.\n    // This unbinds event listeners\n    // that behaviors have registered for.\n    map(this._behaviors, behavior => behavior.destroy(options));\n  },\n\n  // Remove a behavior\n  _removeBehavior(behavior) {\n    // Don't worry about the clean up if the view is destroyed\n    if (this._isDestroyed) { return; }\n\n    // Remove behavior-only triggers and events\n    this.undelegate(`.trig${ behavior.cid } .${ behavior.cid }`);\n\n    this._behaviors = without(this._behaviors, behavior);\n  },\n\n  _bindBehaviorUIElements() {\n    map(this._behaviors, behavior => behavior.bindUIElements());\n  },\n\n  _unbindBehaviorUIElements() {\n    map(this._behaviors, behavior => behavior.unbindUIElements());\n  },\n\n  _triggerEventOnBehaviors(eventName, view, options) {\n    map(this._behaviors, behavior => behavior.triggerMethod(eventName, view, options));\n  }\n};\n","import { result } from 'underscore';\n\n// MixinOptions\n// - collectionEvents\n// - modelEvents\n\nexport default {\n  // Handle `modelEvents`, and `collectionEvents` configuration\n  _delegateEntityEvents(model, collection) {\n    if (model) {\n      this._modelEvents = result(this, 'modelEvents');\n      this.bindEvents(model, this._modelEvents);\n    }\n\n    if (collection) {\n      this._collectionEvents = result(this, 'collectionEvents');\n      this.bindEvents(collection, this._collectionEvents);\n    }\n  },\n\n  // Remove any previously delegate entity events\n  _undelegateEntityEvents(model, collection) {\n    if (this._modelEvents) {\n      this.unbindEvents(model, this._modelEvents);\n      delete this._modelEvents;\n    }\n\n    if (this._collectionEvents) {\n      this.unbindEvents(collection, this._collectionEvents);\n      delete this._collectionEvents;\n    }\n  },\n\n  // Remove cached event handlers\n  _deleteEntityEventHandlers() {\n    delete this._modelEvents;\n    delete this._collectionEvents;\n  }\n};\n","import { map, result, extend } from 'underscore';\n\n// MixinOptions\n// - template\n// - templateContext\n\nexport default {\n\n  // Internal method to render the template with the serialized data\n  // and template context\n  _renderTemplate(template) {\n    // Add in entity data and template context\n    const data = this.mixinTemplateContext(this.serializeData()) || {};\n\n    // Render and add to el\n    const html = this._renderHtml(template, data);\n    if (typeof html !== 'undefined') {\n      this.attachElContent(html);\n    }\n  },\n\n  // Get the template for this view instance.\n  // You can set a `template` attribute in the view definition\n  // or pass a `template: TemplateFunction` parameter in\n  // to the constructor options.\n  getTemplate() {\n    return this.template;\n  },\n\n  // Mix in template context methods. Looks for a\n  // `templateContext` attribute, which can either be an\n  // object literal, or a function that returns an object\n  // literal. All methods and attributes from this object\n  // are copies to the object passed in.\n  mixinTemplateContext(serializedData) {\n    const templateContext = result(this, 'templateContext');\n    if (!templateContext) { return serializedData; }\n    if (!serializedData) { return templateContext; }\n    return extend({}, serializedData, templateContext);\n  },\n\n  // Serialize the view's model *or* collection, if\n  // it exists, for the template\n  serializeData() {\n    // If we have a model, we serialize that\n    if (this.model) {\n      return this.serializeModel();\n    }\n\n    // Otherwise, we serialize the collection,\n    // making it available under the `items` property\n    if (this.collection) {\n      return {\n        items: this.serializeCollection()\n      };\n    }\n  },\n\n  // Prepares the special `model` property of a view\n  // for being displayed in the template. Override this if\n  // you need a custom transformation for your view's model\n  serializeModel() {\n    return this.model.attributes;\n  },\n\n  // Serialize a collection\n  serializeCollection() {\n    return map(this.collection.models, model => model.attributes);\n  },\n\n  // Renders the data into the template\n  _renderHtml(template, data) {\n    return template(data);\n  },\n\n  // Attaches the content of a given view.\n  // This method can be overridden to optimize rendering,\n  // or to render in a non standard way.\n  //\n  // For example, using `innerHTML` instead of `$el.html`\n  //\n  // ```js\n  // attachElContent(html) {\n  //   this.el.innerHTML = html;\n  // }\n  // ```\n  attachElContent(html) {\n    this.Dom.setContents(this.el, html);\n  }\n};\n","import { each, reduce, isString, result } from 'underscore';\n// allows for the use of the @ui. syntax within\n// a given key for triggers and events\n// swaps the @ui with the associated selector.\n// Returns a new, non-mutated, parsed events hash.\nconst normalizeUIKeys = function(hash, ui) {\n  return reduce(hash, (memo, val, key) => {\n    const normalizedKey = normalizeUIString(key, ui);\n    memo[normalizedKey] = val;\n    return memo;\n  }, {});\n};\n\nconst uiRegEx = /@ui\\.[a-zA-Z-_$0-9]*/g;\n\n// utility method for parsing @ui. syntax strings\n// into associated selector\nconst normalizeUIString = function(uiString, ui) {\n  return uiString.replace(uiRegEx, (r) => {\n    return ui[r.slice(4)];\n  });\n};\n\n// allows for the use of the @ui. syntax within\n// a given value for regions\n// swaps the @ui with the associated selector\nconst normalizeUIValues = function(hash, ui, property) {\n  each(hash, (val, key) => {\n    if (isString(val)) {\n      hash[key] = normalizeUIString(val, ui);\n    } else if (val) {\n      const propertyVal = val[property];\n      if (isString(propertyVal)) {\n        val[property] = normalizeUIString(propertyVal, ui);\n      }\n    }\n  });\n  return hash;\n};\n\nexport default {\n\n  // normalize the keys of passed hash with the views `ui` selectors.\n  // `{\"@ui.foo\": \"bar\"}`\n  normalizeUIKeys(hash, uiBindings = this._getUIBindings()) {\n    return normalizeUIKeys(hash, uiBindings);\n  },\n\n  // normalize the passed string with the views `ui` selectors.\n  // `\"@ui.bar\"`\n  normalizeUIString(uiString, uiBindings = this._getUIBindings()) {\n    return normalizeUIString(uiString, uiBindings);\n  },\n\n  // normalize the values of passed hash with the views `ui` selectors.\n  // `{foo: \"@ui.bar\"}`\n  normalizeUIValues(hash, property, uiBindings = this._getUIBindings()) {\n    return normalizeUIValues(hash, uiBindings, property);\n  },\n\n  _getUIBindings() {\n    const uiBindings = result(this, '_uiBindings');\n    return uiBindings || result(this, 'ui');\n  },\n\n  // This method binds the elements specified in the \"ui\" hash inside the view's code with\n  // the associated jQuery selectors.\n  _bindUIElements() {\n    if (!this.ui) { return; }\n\n    // store the ui hash in _uiBindings so they can be reset later\n    // and so re-rendering the view will be able to find the bindings\n    if (!this._uiBindings) {\n      this._uiBindings = this.ui;\n    }\n\n    // get the bindings result, as a function or otherwise\n    const bindings = result(this, '_uiBindings');\n\n    // empty the ui so we don't have anything to start with\n    this._ui = {};\n\n    // bind each of the selectors\n    each(bindings, (selector, key) => {\n      this._ui[key] = this.$(selector);\n    });\n\n    this.ui = this._ui;\n  },\n\n  _unbindUIElements() {\n    if (!this.ui || !this._uiBindings) { return; }\n\n    // delete all of the existing ui bindings\n    each(this.ui, ($el, name) => {\n      delete this.ui[name];\n    });\n\n    // reset the ui element to the original bindings configuration\n    this.ui = this._uiBindings;\n    delete this._uiBindings;\n    delete this._ui;\n  },\n\n  _getUI(name) {\n    return this._ui[name];\n  }\n};\n","// Add Feature flags here\n// e.g. 'class' => false\nconst FEATURES = {\n  childViewEventPrefix: false,\n  triggersStopPropagation: true,\n  triggersPreventDefault: true,\n  DEV_MODE: false\n};\n\nfunction isEnabled(name) {\n  return !!FEATURES[name];\n}\n\nfunction setEnabled(name, state) {\n  return FEATURES[name] = state;\n}\n\nexport {\n  FEATURES,\n  setEnabled,\n  isEnabled\n};\n","// Event Delegator\n//  ---------\nimport { each, extend } from 'underscore';\n\n// Static setter\nexport function setEventDelegator(mixin) {\n  this.prototype.EventDelegator = extend({}, this.prototype.EventDelegator, mixin);\n  return this;\n}\n\nexport default {\n\n  shouldCapture(eventName) {\n    return ['focus', 'blur'].indexOf(eventName) !== -1;\n  },\n\n  // this.$el.on(eventName + '.delegateEvents' + this.cid, selector, handler);\n  delegate({ eventName, selector, handler, events, rootEl }) {\n    const shouldCapture = this.shouldCapture(eventName);\n\n    if (selector) {\n      const delegateHandler = function(evt) {\n        let node = evt.target;\n        for (; node && node !== rootEl; node = node.parentNode) {\n          if (Element.prototype.matches.call(node, selector)) {\n            evt.delegateTarget = node;\n            handler(evt);\n          }\n        }\n      };\n\n      events.push({ eventName, handler: delegateHandler });\n      Element.prototype.addEventListener.call(rootEl, eventName, delegateHandler, shouldCapture);\n\n      return;\n    }\n\n    events.push({ eventName, handler });\n    Element.prototype.addEventListener.call(rootEl, eventName, handler, shouldCapture);\n  },\n\n  // this.$el.off('.delegateEvents' + this.cid);\n  undelegateAll({ events, rootEl }) {\n    if (!rootEl) { return; }\n\n    each(events, ({ eventName, handler }) => {\n      const shouldCapture = this.shouldCapture(eventName);\n      Element.prototype.removeEventListener.call(rootEl, eventName, handler, shouldCapture);\n    });\n\n    events.length = 0;\n  }\n};\n","import { isString, isFunction, result, each } from 'underscore';\nimport { isEnabled } from '../config/features';\nimport EventDelegator from '../config/event-delegator';\n\nconst delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\n\n// Internal method to create an event handler for a given `triggerDef` like\n// 'click:foo'\nfunction buildViewTrigger(view, triggerDef) {\n  if (isString(triggerDef)) {\n    triggerDef = {event: triggerDef};\n  }\n\n  const eventName = triggerDef.event;\n\n  let shouldPreventDefault = !!triggerDef.preventDefault;\n\n  if (isEnabled('triggersPreventDefault')) {\n    shouldPreventDefault = triggerDef.preventDefault !== false;\n  }\n\n  let shouldStopPropagation = !!triggerDef.stopPropagation;\n\n  if (isEnabled('triggersStopPropagation')) {\n    shouldStopPropagation = triggerDef.stopPropagation !== false;\n  }\n\n  return function(event, ...args) {\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n\n    if (shouldStopPropagation) {\n      event.stopPropagation();\n    }\n\n    view.triggerMethod(eventName, view, event, ...args);\n  };\n}\n\nexport default {\n\n  EventDelegator,\n\n  _initViewEvents() {\n    this._domEvents = [];\n  },\n\n  _undelegateViewEvents() {\n    this.EventDelegator.undelegateAll({\n      events: this._domEvents,\n      rootEl: this.el\n    });\n  },\n\n  _delegateViewEvents(view = this) {\n    const uiBindings = this._getUIBindings();\n    this._delegateEvents(uiBindings);\n    this._delegateTriggers(uiBindings, view);\n  },\n\n  _delegateEvents(uiBindings) {\n    if (!this.events) { return; }\n\n    each(result(this, 'events'), (handler, key) => {\n      if (!isFunction(handler)) {\n        handler = this[handler];\n      }\n      if (!handler) { return; }\n      this._delegate(handler.bind(this), this.normalizeUIString(key, uiBindings));\n    });\n  },\n\n  _delegateTriggers(uiBindings, view) {\n    if (!this.triggers) { return; }\n\n    each(result(this, 'triggers'), (value, key) => {\n      this._delegate(buildViewTrigger(view, value), this.normalizeUIString(key, uiBindings));\n    });\n  },\n\n  _delegate(handler, key) {\n    const match = key.match(delegateEventSplitter);\n    this.EventDelegator.delegate({\n      eventName: match[1],\n      selector: match[2],\n      handler,\n      events: this._domEvents,\n      rootEl: this.el\n    });\n  }\n};\n","// DomApi\n//  ---------\nimport { extend, each, keys } from 'underscore';\n\n// Static setter\nexport function setDomApi(mixin) {\n  this.prototype.Dom = extend({}, this.prototype.Dom, mixin);\n  return this;\n}\n\nexport default {\n  // Returns a new HTML DOM node of tagName\n  createElement(tagName) {\n    return document.createElement(tagName);\n  },\n\n  // Returns a new HTML DOM node instance\n  createBuffer() {\n    return document.createDocumentFragment();\n  },\n\n  // Returns the document element for a given DOM element\n  getDocumentEl(el) {\n    return el.ownerDocument.documentElement;\n  },\n\n  // Finds the `selector` string with the el\n  // Returns an array-like object of nodes\n  findEl(el, selector) {\n    return el.querySelectorAll(selector);\n  },\n\n  // Returns true if the el contains the node childEl\n  hasEl(el, childEl) {\n    return el.contains(childEl && childEl.parentNode);\n  },\n\n  // Detach `el` from the DOM without removing listeners\n  detachEl(el) {\n    if (el.parentNode) {el.parentNode.removeChild(el);}\n  },\n\n  // Remove `oldEl` from the DOM and put `newEl` in its place\n  replaceEl(newEl, oldEl) {\n    if (newEl === oldEl) {\n      return;\n    }\n\n    const parent = oldEl.parentNode;\n\n    if (!parent) {\n      return;\n    }\n\n    parent.replaceChild(newEl, oldEl);\n  },\n\n  // Swaps the location of `el1` and `el2` in the DOM\n  swapEl(el1, el2) {\n    if (el1 === el2) {\n      return;\n    }\n\n    const parent1 = el1.parentNode;\n    const parent2 = el2.parentNode;\n\n    if (!parent1 || !parent2) {\n      return;\n    }\n\n    const next1 = el1.nextSibling;\n    const next2 = el2.nextSibling;\n\n    parent1.insertBefore(el2, next1);\n    parent2.insertBefore(el1, next2);\n  },\n\n  // Replace the contents of `el` with the `html`\n  setContents(el, html) {\n    el.innerHTML = html\n  },\n\n  // Sets attributes on a DOM node\n  setAttributes(el, attrs) {\n    each(keys(attrs), attr => {\n      attr in el ? el[attr] = attrs[attr] : el.setAttribute(attr, attrs[attr]);\n    });\n  },\n\n  // Takes the DOM node `el` and appends the DOM node `contents`\n  // to the end of the element's contents.\n  appendContents(el, contents) {\n    el.appendChild(contents);\n  },\n\n  // Does the el have child nodes\n  hasContents(el) {\n    return !!el && el.hasChildNodes();\n  },\n\n  // Remove the inner contents of `el` from the DOM while leaving\n  // `el` itself in the DOM.\n  detachContents(el) {\n    el.textContent = '';\n  }\n};\n","// ViewMixin\n//  ---------\n\nimport { extend, result } from 'underscore';\nimport BehaviorsMixin from './behaviors';\nimport CommonMixin from './common';\nimport DelegateEntityEventsMixin from './delegate-entity-events';\nimport TemplateRenderMixin from './template-render';\nimport UIMixin from './ui';\nimport ViewEvents from './view-events';\nimport { isEnabled } from '../config/features';\nimport DomApi from '../config/dom';\n\n\n// MixinOptions\n// - attributes\n// - behaviors\n// - childViewEventPrefix\n// - childViewEvents\n// - childViewTriggers\n// - className\n// - collection\n// - collectionEvents\n// - el\n// - events\n// - id\n// - model\n// - modelEvents\n// - tagName\n// - triggers\n// - ui\n\n\nconst ViewMixin = {\n  tagName: 'div',\n\n  // This is a noop method intended to be overridden\n  preinitialize() {},\n\n  Dom: DomApi,\n\n  // Create an element from the `id`, `className` and `tagName` properties.\n  _getEl() {\n    if (!this.el) {\n      const el = this.Dom.createElement(result(this, 'tagName'));\n      const attrs = extend({}, result(this, 'attributes'));\n      if (this.id) {attrs.id = result(this, 'id');}\n      if (this.className) {attrs.class = result(this, 'className');}\n      this.Dom.setAttributes(el, attrs);\n      return el;\n    }\n\n    return result(this, 'el');\n  },\n\n  $(selector) {\n    return this.Dom.findEl(this.el, selector)\n  },\n\n  _isElAttached() {\n    return !!this.el && this.Dom.hasEl(this.Dom.getDocumentEl(this.el), this.el);\n  },\n\n  supportsRenderLifecycle: true,\n  supportsDestroyLifecycle: true,\n\n  _isDestroyed: false,\n\n  isDestroyed() {\n    return !!this._isDestroyed;\n  },\n\n  _isRendered: false,\n\n  isRendered() {\n    return !!this._isRendered;\n  },\n\n  _isAttached: false,\n\n  isAttached() {\n    return !!this._isAttached;\n  },\n\n  // Handle `modelEvents`, and `collectionEvents` configuration\n  delegateEntityEvents() {\n    this._delegateEntityEvents(this.model, this.collection);\n\n    // bind each behaviors model and collection events\n    this._delegateBehaviorEntityEvents();\n\n    return this;\n  },\n\n  // Handle unbinding `modelEvents`, and `collectionEvents` configuration\n  undelegateEntityEvents() {\n    this._undelegateEntityEvents(this.model, this.collection);\n\n    // unbind each behaviors model and collection events\n    this._undelegateBehaviorEntityEvents();\n\n    return this;\n  },\n\n  // Handle destroying the view and its children.\n  destroy(options) {\n    if (this._isDestroyed || this._isDestroying) { return this; }\n    this._isDestroying = true;\n    const shouldTriggerDetach = this._isAttached && !this._disableDetachEvents;\n\n    this.triggerMethod('before:destroy', this, options);\n    if (shouldTriggerDetach) {\n      this.triggerMethod('before:detach', this);\n    }\n\n    // unbind UI elements\n    this.unbindUIElements();\n    this._undelegateViewEvents();\n\n    // remove the view from the DOM\n    this.Dom.detachEl(this.el);\n\n    if (shouldTriggerDetach) {\n      this._isAttached = false;\n      this.triggerMethod('detach', this);\n    }\n\n    // remove children after the remove to prevent extra paints\n    this._removeChildren();\n\n    this._isDestroyed = true;\n    this._isRendered = false;\n\n    // Destroy behaviors after _isDestroyed flag\n    this._destroyBehaviors(options);\n\n    this._deleteEntityEventHandlers();\n\n    this.triggerMethod('destroy', this, options);\n    this._triggerEventOnBehaviors('destroy', this, options);\n\n    this.stopListening();\n\n    return this;\n  },\n\n  // This method binds the elements specified in the \"ui\" hash\n  bindUIElements() {\n    this._bindUIElements();\n    this._bindBehaviorUIElements();\n\n    return this;\n  },\n\n  // This method unbinds the elements specified in the \"ui\" hash\n  unbindUIElements() {\n    this._unbindUIElements();\n    this._unbindBehaviorUIElements();\n\n    return this;\n  },\n\n  getUI(name) {\n    return this._getUI(name);\n  },\n\n  // Cache `childViewEvents` and `childViewTriggers`\n  _buildEventProxies() {\n    this._childViewEvents = this.normalizeMethods(result(this, 'childViewEvents'));\n    this._childViewTriggers = result(this, 'childViewTriggers');\n    this._eventPrefix = this._getEventPrefix();\n  },\n\n  _getEventPrefix() {\n    const defaultPrefix = isEnabled('childViewEventPrefix') ? 'childview' : false;\n    const prefix = result(this, 'childViewEventPrefix', defaultPrefix);\n\n    return (prefix === false) ? prefix : prefix + ':';\n  },\n\n  _proxyChildViewEvents(view) {\n    if (this._childViewEvents || this._childViewTriggers || this._eventPrefix) {\n      this.listenTo(view, 'all', this._childViewEventHandler);\n    }\n  },\n\n  _childViewEventHandler(eventName, ...args) {\n    const childViewEvents = this._childViewEvents;\n\n    // call collectionView childViewEvent if defined\n    if (childViewEvents && childViewEvents[eventName]) {\n      childViewEvents[eventName].apply(this, args);\n    }\n\n    // use the parent view's proxyEvent handlers\n    const childViewTriggers = this._childViewTriggers;\n\n    // Call the event with the proxy name on the parent layout\n    if (childViewTriggers && childViewTriggers[eventName]) {\n      this.triggerMethod(childViewTriggers[eventName], ...args);\n    }\n\n    if (this._eventPrefix) {\n      this.triggerMethod(this._eventPrefix + eventName, ...args);\n    }\n  }\n};\n\nextend(ViewMixin, BehaviorsMixin, CommonMixin, DelegateEntityEventsMixin, TemplateRenderMixin, UIMixin, ViewEvents);\n\nexport default ViewMixin;\n","export function isView(view) {\n  return view.render && (view.destroy || view.remove);\n}\n\nexport function isViewClass(ViewClass) {\n  return ViewClass.prototype.render && (ViewClass.prototype.destroy || ViewClass.prototype.remove);\n}\n\nexport function renderView(view) {\n  if (view._isRendered) {\n    return;\n  }\n\n  if (!view.supportsRenderLifecycle) {\n    view.triggerMethod('before:render', view);\n  }\n\n  view.render();\n  view._isRendered = true;\n\n  if (!view.supportsRenderLifecycle) {\n    view.triggerMethod('render', view);\n  }\n}\n\nexport function destroyView(view, disableDetachEvents) {\n  if (view.destroy) {\n    // Attach flag for public destroy function internal check\n    view._disableDetachEvents = disableDetachEvents;\n    view.destroy();\n    return;\n  }\n\n  // Destroy for non-Marionette Views\n  if (!view.supportsDestroyLifecycle) {\n    view.triggerMethod('before:destroy', view);\n  }\n\n  const shouldTriggerDetach = view._isAttached && !disableDetachEvents;\n\n  if (shouldTriggerDetach) {\n    view.triggerMethod('before:detach', view);\n  }\n\n  view.remove();\n\n  if (shouldTriggerDetach) {\n    view._isAttached = false;\n    view.triggerMethod('detach', view);\n  }\n\n  view._isDestroyed = true;\n\n  if (!view.supportsDestroyLifecycle) {\n    view.triggerMethod('destroy', view);\n  }\n}\n","// Region\n// ------\n\nimport { extend as _extend, uniqueId, isObject, isFunction, result } from 'underscore';\nimport MarionetteError from '../utils/error';\nimport extend from '../utils/extend';\nimport monitorViewEvents from './common/monitor-view-events';\nimport { renderView, destroyView, isView } from './common/view';\nimport CommonMixin from '../mixins/common';\nimport View from './view';\nimport DomApi, { setDomApi } from '../config/dom';\n\nconst classErrorName = 'RegionError';\n\nconst ClassOptions = [\n  'allowMissingEl',\n  'parentEl',\n  'replaceElement'\n];\n\nconst Region = function(options) {\n  this._setOptions(options, ClassOptions);\n\n  this.cid = uniqueId(this.cidPrefix);\n\n  // getOption necessary because options.el may be passed as undefined\n  this._initEl = this.el = this.getOption('el');\n\n  this.initialize.apply(this, arguments);\n};\n\nRegion.extend = extend;\nRegion.setDomApi = setDomApi;\n\n// Region Methods\n// --------------\n\n_extend(Region.prototype, CommonMixin, {\n  Dom: DomApi,\n\n  cidPrefix: 'mnr',\n  replaceElement: false,\n  _isReplaced: false,\n  _isSwappingView: false,\n\n  // Displays a view instance inside of the region. If necessary handles calling the `render`\n  // method for you. Reads content directly from the `el` attribute.\n  show(view, options) {\n    if (!this._ensureElement(options)) {\n      return;\n    }\n\n    view = this._getView(view, options);\n\n    if (view === this.currentView) { return this; }\n\n    if (view._isShown) {\n      throw new MarionetteError({\n        name: classErrorName,\n        message: 'View is already shown in a Region or CollectionView',\n        url: 'marionette.region.html#showing-a-view'\n      });\n    }\n\n    this._isSwappingView = !!this.currentView;\n\n    this.triggerMethod('before:show', this, view, options);\n\n    // Assume an attached view is already in the region for pre-existing DOM\n    if (this.currentView || !view._isAttached) {\n      this.empty(options);\n    }\n\n    this._setupChildView(view);\n\n    this.currentView = view;\n\n    renderView(view);\n\n    this._attachView(view, options);\n\n    this.triggerMethod('show', this, view, options);\n\n    this._isSwappingView = false;\n\n    return this;\n  },\n\n  _setEl(el) {\n    if (isObject(el)) {\n      this.el = el;\n      return;\n    }\n\n    if (!el) {\n      throw new MarionetteError({\n        name: classErrorName,\n        message: 'An \"el\" must be specified for a region.',\n        url: 'marionette.region.html#additional-options'\n      });\n    }\n\n    this.el = this.getEl(el);\n  },\n\n  // Set the `el` of the region and move any current view to the new `el`.\n  _setElement(el) {\n    if (el === this.el) { return this; }\n\n    const shouldReplace = this._isReplaced;\n\n    this._restoreEl();\n\n    this._setEl(el);\n\n    if (this.currentView) {\n      const view = this.currentView;\n\n      if (shouldReplace) {\n        this._replaceEl(view);\n      } else {\n        this.attachHtml(view);\n      }\n    }\n\n    return this;\n  },\n\n  _setupChildView(view) {\n    monitorViewEvents(view);\n\n    this._proxyChildViewEvents(view);\n\n    // We need to listen for if a view is destroyed in a way other than through the region.\n    // If this happens we need to remove the reference to the currentView since once a view\n    // has been destroyed we can not reuse it.\n    view.on('destroy', this._empty, this);\n  },\n\n  _proxyChildViewEvents(view) {\n    const parentView = this._parentView;\n\n    if (!parentView) { return; }\n\n    parentView._proxyChildViewEvents(view);\n  },\n\n  // If the regions parent view is not monitoring its attach/detach events\n  _shouldDisableMonitoring() {\n    return this._parentView && this._parentView.monitorViewEvents === false;\n  },\n\n  _isElAttached() {\n    return this.Dom.hasEl(this.Dom.getDocumentEl(this.el), this.el);\n  },\n\n  _attachView(view, { replaceElement } = {}) {\n    const shouldTriggerAttach = !view._isAttached && this._isElAttached() && !this._shouldDisableMonitoring();\n    const shouldReplaceEl = typeof replaceElement === 'undefined' ? !!result(this, 'replaceElement') : !!replaceElement;\n\n    if (shouldTriggerAttach) {\n      view.triggerMethod('before:attach', view);\n    }\n\n    if (shouldReplaceEl) {\n      this._replaceEl(view);\n    } else {\n      this.attachHtml(view);\n    }\n\n    if (shouldTriggerAttach) {\n      view._isAttached = true;\n      view.triggerMethod('attach', view);\n    }\n\n    // Corresponds that view is shown in a marionette Region or CollectionView\n    view._isShown = true;\n  },\n\n  _ensureElement(options = {}) {\n    this._setEl(this.el);\n\n    if (!this.el) {\n      const allowMissingEl = typeof options.allowMissingEl === 'undefined' ? !!result(this, 'allowMissingEl') : !!options.allowMissingEl;\n\n      if (allowMissingEl) {\n        return false;\n      } else {\n        throw new MarionetteError({\n          name: classErrorName,\n          message: `An \"el\" must exist in DOM for this region ${this.cid}`,\n          url: 'marionette.region.html#additional-options'\n        });\n      }\n    }\n    return true;\n  },\n\n  _getView(view) {\n    if (!view) {\n      throw new MarionetteError({\n        name: classErrorName,\n        message: 'The view passed is undefined and therefore invalid. You must pass a view instance to show.',\n        url: 'marionette.region.html#showing-a-view'\n      });\n    }\n\n    if (view._isDestroyed) {\n      throw new MarionetteError({\n        name: classErrorName,\n        message: `View (cid: \"${view.cid}\") has already been destroyed and cannot be used.`,\n        url: 'marionette.region.html#showing-a-view'\n      });\n    }\n\n    if (isView(view)) {\n      return view;\n    }\n\n    const viewOptions = this._getViewOptions(view);\n\n    return new View(viewOptions);\n  },\n\n  // This allows for a template or a static string to be\n  // used as a template\n  _getViewOptions(viewOptions) {\n    if (isFunction(viewOptions)) {\n      return { template: viewOptions };\n    }\n\n    if (isObject(viewOptions)) {\n      return viewOptions;\n    }\n\n    const template = function() { return viewOptions; };\n\n    return { template };\n  },\n\n  // Override this method to change how the region finds the DOM element that it manages. Return\n  // a jQuery selector object scoped to a provided parent el or the document if none exists.\n  getEl(el) {\n    const context = result(this, 'parentEl');\n\n    return this.Dom.findEl(context || document, el)[0];\n  },\n\n  _replaceEl(view) {\n    // Always restore the el to ensure the regions el is present before replacing\n    this._restoreEl();\n\n    view.on('before:destroy', this._restoreEl, this);\n\n    this.Dom.replaceEl(view.el, this.el);\n\n    this._isReplaced = true;\n  },\n\n  // Restore the region's element in the DOM.\n  _restoreEl() {\n    // There is nothing to replace\n    if (!this._isReplaced) {\n      return;\n    }\n\n    const view = this.currentView;\n\n    if (!view) {\n      return;\n    }\n\n    this._detachView(view);\n\n    this._isReplaced = false;\n  },\n\n  // Check to see if the region's el was replaced.\n  isReplaced() {\n    return !!this._isReplaced;\n  },\n\n  // Check to see if a view is being swapped by another\n  isSwappingView() {\n    return !!this._isSwappingView;\n  },\n\n  // Override this method to change how the new view is appended to the `$el` that the\n  // region is managing\n  attachHtml(view) {\n    this.Dom.appendContents(this.el, view.el);\n  },\n\n  // Destroy the current view, if there is one. If there is no current view,\n  // it will detach any html inside the region's `el`.\n  empty(options = { allowMissingEl: true }) {\n    const view = this.currentView;\n\n    // If there is no view in the region we should only detach current html\n    if (!view) {\n      if (this._ensureElement(options)) {\n        this.detachHtml();\n      }\n      return this;\n    }\n\n    this._empty(view, true);\n    return this;\n  },\n\n  _empty(view, shouldDestroy) {\n    view.off('destroy', this._empty, this);\n    this.triggerMethod('before:empty', this, view);\n\n    this._restoreEl();\n\n    delete this.currentView;\n\n    if (!view._isDestroyed) {\n      if (shouldDestroy) {\n        this.removeView(view);\n      } else {\n        this._detachView(view);\n      }\n      view._isShown = false;\n      this._stopChildViewEvents(view);\n    }\n\n    this.triggerMethod('empty', this, view);\n  },\n\n  _stopChildViewEvents(view) {\n    const parentView = this._parentView;\n\n    if (!parentView) { return; }\n\n    this._parentView.stopListening(view);\n  },\n\n  // Non-Marionette safe view.destroy\n  destroyView(view) {\n    if (view._isDestroyed) {\n      return view;\n    }\n\n    destroyView(view, this._shouldDisableMonitoring());\n    return view;\n  },\n\n  // Override this method to determine what happens when the view\n  // is removed from the region when the view is not being detached\n  removeView(view) {\n    this.destroyView(view);\n  },\n\n  // Empties the Region without destroying the view\n  // Returns the detached view\n  detachView() {\n    const view = this.currentView;\n\n    if (!view) {\n      return;\n    }\n\n    this._empty(view);\n\n    return view;\n  },\n\n  _detachView(view) {\n    const shouldTriggerDetach = view._isAttached && !this._shouldDisableMonitoring();\n    const shouldRestoreEl = this._isReplaced;\n    if (shouldTriggerDetach) {\n      view.triggerMethod('before:detach', view);\n    }\n\n    if (shouldRestoreEl) {\n      this.Dom.replaceEl(this.el, view.el);\n    } else {\n      this.detachHtml();\n    }\n\n    if (shouldTriggerDetach) {\n      view._isAttached = false;\n      view.triggerMethod('detach', view);\n    }\n  },\n\n  // Override this method to change how the region detaches current content\n  detachHtml() {\n    this.Dom.detachContents(this.el);\n  },\n\n  // Checks whether a view is currently present within the region. Returns `true` if there is\n  // and `false` if no view is present.\n  hasView() {\n    return !!this.currentView;\n  },\n\n  // Reset the region by destroying any existing view and clearing out the cached `$el`.\n  // The next time a view is shown via this region, the region will re-query the DOM for\n  // the region's `el`.\n  reset(options) {\n    this.empty(options);\n\n    this.el = this._initEl;\n\n    delete this.$el;\n    return this;\n  },\n\n  _isDestroyed: false,\n\n  isDestroyed() {\n    return this._isDestroyed;\n  },\n\n  // Destroy the region, remove any child view\n  // and remove the region from any associated view\n  destroy(options) {\n    if (this._isDestroyed) { return this; }\n\n    this.triggerMethod('before:destroy', this, options);\n    this._isDestroyed = true;\n\n    this.reset(options);\n\n    if (this._name) {\n      this._parentView._removeReferences(this._name);\n    }\n    delete this._parentView;\n    delete this._name;\n\n    this.triggerMethod('destroy', this, options);\n    this.stopListening();\n\n    return this;\n  }\n});\n\nexport default Region;\n","import { isString, isFunction, isObject, extend } from 'underscore';\nimport MarionetteError from '../../utils/error';\nimport Region from '../region';\n\n// return the region instance from the definition\nexport default function(definition, defaults) {\n  if (definition instanceof Region) {\n    return definition;\n  }\n\n  if (isString(definition)) {\n    return buildRegionFromObject(defaults, { el: definition });\n  }\n\n  if (isFunction(definition)) {\n    return buildRegionFromObject(defaults, { regionClass: definition });\n  }\n\n  if (isObject(definition)) {\n    return buildRegionFromObject(defaults, definition);\n  }\n\n  throw new MarionetteError({\n    message: 'Improper region configuration type.',\n    url: 'marionette.region.html#defining-regions'\n  });\n}\n\nfunction buildRegionFromObject(defaults, definition) {\n  const options = extend({}, defaults, definition);\n\n  const RegionClass = options.regionClass\n\n  delete options.regionClass;\n\n  return new RegionClass(options);\n}\n","import { clone, result, isEmpty, extend, partial, each, reduce } from 'underscore';\nimport buildRegion from '../modules/common/build-region';\nimport Region from '../modules/region';\n\n// MixinOptions\n// - regions\n// - regionClass\n\nexport default {\n  regionClass: Region,\n\n  // Internal method to initialize the regions that have been defined in a\n  // `regions` attribute on this View.\n  _initRegions() {\n\n    // init regions hash\n    this.regions = this.regions || {};\n    this._regions = {};\n\n    this.addRegions(result(this, 'regions'));\n  },\n\n  // Internal method to re-initialize all of the regions by updating\n  // the `el` that they point to\n  _reInitRegions() {\n    each(this._regions, region => region.reset());\n  },\n\n  // Add a single region, by name, to the View\n  addRegion(name, definition) {\n    const regions = {};\n    regions[name] = definition;\n    return this.addRegions(regions)[name];\n  },\n\n  // Add multiple regions as a {name: definition, name2: def2} object literal\n  addRegions(regions) {\n    // If there's nothing to add, stop here.\n    if (isEmpty(regions)) {\n      return;\n    }\n\n    // Normalize region selectors hash to allow\n    // a user to use the @ui. syntax.\n    regions = this.normalizeUIValues(regions, 'el');\n\n    // Add the regions definitions to the regions property\n    this.regions = extend({}, this.regions, regions);\n\n    return this._addRegions(regions);\n  },\n\n  // internal method to build and add regions\n  _addRegions(regionDefinitions) {\n    const defaults = {\n      regionClass: this.regionClass,\n      parentEl: partial(result, this, 'el')\n    };\n\n    return reduce(regionDefinitions, (regions, definition, name) => {\n      regions[name] = buildRegion(definition, defaults);\n      this._addRegion(regions[name], name);\n      return regions;\n    }, {});\n  },\n\n  _addRegion(region, name) {\n    this.triggerMethod('before:add:region', this, name, region);\n\n    region._parentView = this;\n    region._name = name;\n\n    this._regions[name] = region;\n\n    this.triggerMethod('add:region', this, name, region);\n  },\n\n  // Remove a single region from the View, by name\n  removeRegion(name) {\n    const region = this._regions[name];\n\n    this._removeRegion(region, name);\n\n    return region;\n  },\n\n  // Remove all regions from the View\n  removeRegions() {\n    const regions = this._getRegions();\n\n    each(this._regions, this._removeRegion.bind(this));\n\n    return regions;\n  },\n\n  _removeRegion(region, name) {\n    this.triggerMethod('before:remove:region', this, name, region);\n\n    region.destroy();\n\n    this.triggerMethod('remove:region', this, name, region);\n  },\n\n  // Called in a region's destroy\n  _removeReferences(name) {\n    delete this.regions[name];\n    delete this._regions[name];\n  },\n\n  // Empty all regions in the region manager, but\n  // leave them attached\n  emptyRegions() {\n    const regions = this.getRegions();\n    each(regions, region => region.empty());\n    return regions;\n  },\n\n  // Checks to see if view contains region\n  // Accepts the region name\n  // hasRegion('main')\n  hasRegion(name) {\n    return !!this.getRegion(name);\n  },\n\n  // Provides access to regions\n  // Accepts the region name\n  // getRegion('main')\n  getRegion(name) {\n    if (!this._isRendered) {\n      this.render();\n    }\n    return this._regions[name];\n  },\n\n  _getRegions() {\n    return clone(this._regions);\n  },\n\n  // Get all regions\n  getRegions() {\n    if (!this._isRendered) {\n      this.render();\n    }\n    return this._getRegions();\n  },\n\n  showChildView(name, view, options) {\n    const region = this.getRegion(name);\n    region.show(view, options);\n    return view;\n  },\n\n  detachChildView(name) {\n    return this.getRegion(name).detachView();\n  },\n\n  getChildView(name) {\n    return this.getRegion(name).currentView;\n  }\n\n};\n","// Static setter for the renderer\nexport function setRenderer(renderer) {\n  this.prototype._renderHtml = renderer;\n  return this;\n}\n","// View\n// ---------\n\nimport { extend as _extend, uniqueId, reduce } from 'underscore';\nimport extend from '../utils/extend';\nimport monitorViewEvents from './common/monitor-view-events';\nimport ViewMixin from '../mixins/view';\nimport RegionsMixin from '../mixins/regions';\nimport { setDomApi } from '../config/dom';\nimport { setEventDelegator } from '../config/event-delegator';\nimport { setRenderer } from '../config/renderer';\n\nconst ClassOptions = [\n  'attributes',\n  'behaviors',\n  'childViewEventPrefix',\n  'childViewEvents',\n  'childViewTriggers',\n  'className',\n  'collection',\n  'collectionEvents',\n  'el',\n  'events',\n  'id',\n  'model',\n  'modelEvents',\n  'regionClass',\n  'regions',\n  'tagName',\n  'template',\n  'templateContext',\n  'triggers',\n  'ui'\n];\n\n// Used by _getImmediateChildren\nfunction childReducer(children, region) {\n  if (region.currentView) {\n    children.push(region.currentView);\n  }\n\n  return children;\n}\n\n// The standard view. Includes view events, automatic rendering\n// templates, nested views, and more.\nconst View = function(options) {\n  this.cid = uniqueId(this.cidPrefix);\n  this._setOptions(options, ClassOptions);\n\n  this.preinitialize.apply(this, arguments);\n\n  this._initViewEvents();\n  this.setElement(this._getEl());\n\n  monitorViewEvents(this);\n\n  this._initBehaviors();\n  this._initRegions();\n  this._buildEventProxies();\n\n  this.initialize.apply(this, arguments);\n\n  this.delegateEntityEvents();\n\n  this._triggerEventOnBehaviors('initialize', this, options);\n};\n\n_extend(View, { extend, setRenderer, setDomApi, setEventDelegator });\n\n_extend(View.prototype, ViewMixin, RegionsMixin, {\n  cidPrefix: 'mnv',\n\n  setElement(element) {\n    this._undelegateViewEvents();\n    this.el = element;\n    this._setBehaviorElements();\n\n    this._isRendered = this.Dom.hasContents(this.el);\n    this._isAttached = this._isElAttached();\n\n    if (this._isRendered) {\n      this.bindUIElements();\n    }\n\n    this._delegateViewEvents();\n\n    return this;\n  },\n\n  // If a template is available, renders it into the view's `el`\n  // Re-inits regions and binds UI.\n  render() {\n    const template = this.getTemplate();\n\n    if (template === false || this._isDestroyed) { return this; }\n\n    this.triggerMethod('before:render', this);\n\n    // If this is not the first render call, then we need to\n    // re-initialize the `el` for each region\n    if (this._isRendered) {\n      this._reInitRegions();\n    }\n\n    this._renderTemplate(template);\n    this.bindUIElements();\n\n    this._isRendered = true;\n    this.triggerMethod('render', this);\n\n    return this;\n  },\n\n  // called by ViewMixin destroy\n  _removeChildren() {\n    this.removeRegions();\n  },\n\n  _getImmediateChildren() {\n    return reduce(this._regions, childReducer, []);\n  }\n});\n\nexport default View;\n","import { extend, partial, sortBy } from 'underscore';\n\nimport { forEach, each, map, find, detect, filter,\n  select, reject, every, all, some, any, include,\n  contains, invoke, toArray, first, initial, rest,\n  last, without, isEmpty, pluck, reduce, partition } from 'underscore';\n\nconst _ = { forEach, each, map, find, detect, filter,\n  select, reject, every, all, some, any, include,\n  contains, invoke, toArray, first, initial, rest,\n  last, without, isEmpty, pluck, reduce, partition };\n\n// Provide a container to store, retrieve and\n// shut down child views.\nconst Container = function() {\n  this._init();\n};\n\n// Mix in methods from Underscore, for iteration, and other\n// collection related features.\n// Borrowing this code from Backbone.Collection:\n// https://github.com/jashkenas/backbone/blob/1.1.2/backbone.js#L962\nconst methods = ['forEach', 'each', 'map', 'find', 'detect', 'filter',\n  'select', 'reject', 'every', 'all', 'some', 'any', 'include',\n  'contains', 'invoke', 'toArray', 'first', 'initial', 'rest',\n  'last', 'without', 'isEmpty', 'pluck', 'reduce', 'partition'];\n\neach(methods, function(method) {\n  Container.prototype[method] = function(...args) {\n    return _[method].apply(_, [this._views].concat(args));\n  };\n});\n\nfunction stringComparator(comparator, view) {\n  return view.model && view.model.get(comparator);\n}\n\n// Container Methods\n// -----------------\n\nextend(Container.prototype, {\n\n  // Initializes an empty container\n  _init() {\n    this._views = [];\n    this._viewsByCid = {};\n    this._indexByModel = {};\n    this._updateLength();\n  },\n\n  // Add a view to this container. Stores the view\n  // by `cid` and makes it searchable by the model\n  // cid (and model itself). Additionally it stores\n  // the view by index in the _views array\n  _add(view, index = this._views.length) {\n    this._addViewIndexes(view);\n\n    // add to end by default\n    this._views.splice(index, 0, view);\n\n    this._updateLength();\n  },\n\n  _addViewIndexes(view) {\n    // store the view\n    this._viewsByCid[view.cid] = view;\n\n    // index it by model\n    if (view.model) {\n      this._indexByModel[view.model.cid] = view;\n    }\n  },\n\n  // Sort (mutate) and return the array of the child views.\n  _sort(comparator, context) {\n    if (typeof comparator === 'string') {\n      comparator = partial(stringComparator, comparator);\n      return this._sortBy(comparator);\n    }\n\n    if (comparator.length === 1) {\n      return this._sortBy(comparator.bind(context));\n    }\n\n    return this._views.sort(comparator.bind(context));\n  },\n\n  // Makes `sortBy` mutate the array to match `this._views.sort`\n  _sortBy(comparator) {\n    const sortedViews = sortBy(this._views, comparator);\n\n    this._set(sortedViews);\n\n    return sortedViews;\n  },\n\n  // Replace array contents without overwriting the reference.\n  // Should not add/remove views\n  _set(views, shouldReset) {\n    this._views.length = 0;\n\n    this._views.push.apply(this._views, views.slice(0));\n\n    if (shouldReset) {\n      this._viewsByCid = {};\n      this._indexByModel = {};\n\n      each(views, this._addViewIndexes.bind(this));\n\n      this._updateLength();\n    }\n  },\n\n  // Swap views by index\n  _swap(view1, view2) {\n    const view1Index = this.findIndexByView(view1);\n    const view2Index = this.findIndexByView(view2);\n\n    if (view1Index === -1 || view2Index === -1) {\n      return;\n    }\n\n    const swapView = this._views[view1Index];\n    this._views[view1Index] = this._views[view2Index];\n    this._views[view2Index] = swapView;\n  },\n\n  // Find a view by the model that was attached to it.\n  // Uses the model's `cid` to find it.\n  findByModel(model) {\n    return this.findByModelCid(model.cid);\n  },\n\n  // Find a view by the `cid` of the model that was attached to it.\n  findByModelCid(modelCid) {\n    return this._indexByModel[modelCid];\n  },\n\n  // Find a view by index.\n  findByIndex(index) {\n    return this._views[index];\n  },\n\n  // Find the index of a view instance\n  findIndexByView(view) {\n    return this._views.indexOf(view);\n  },\n\n  // Retrieve a view by its `cid` directly\n  findByCid(cid) {\n    return this._viewsByCid[cid];\n  },\n\n  hasView(view) {\n    return !!this.findByCid(view.cid);\n  },\n\n  // Remove a view and clean up index references.\n  _remove(view) {\n    if (!this._viewsByCid[view.cid]) {\n      return;\n    }\n\n    // delete model index\n    if (view.model) {\n      delete this._indexByModel[view.model.cid];\n    }\n\n    // remove the view from the container\n    delete this._viewsByCid[view.cid];\n\n    const index = this.findIndexByView(view);\n    this._views.splice(index, 1);\n\n    this._updateLength();\n  },\n\n  // Update the `.length` attribute on this container\n  _updateLength() {\n    this.length = this._views.length;\n  }\n});\n\nexport default Container;\n","// Collection View\n// ---------------\n\nimport { extend as _extend, uniqueId, result, map, isFunction, isObject, isString, matches, each, reduce } from 'underscore';\nimport extend from '../utils/extend';\nimport MarionetteError from '../utils/error';\nimport { renderView, destroyView, isViewClass } from './common/view';\nimport monitorViewEvents from './common/monitor-view-events';\nimport ChildViewContainer from './child-view-container';\nimport Region from './region';\nimport ViewMixin from '../mixins/view';\nimport { setDomApi } from '../config/dom';\nimport { setEventDelegator } from '../config/event-delegator';\nimport { setRenderer } from '../config/renderer';\n\nconst classErrorName = 'CollectionViewError';\n\nconst ClassOptions = [\n  'attributes',\n  'behaviors',\n  'childView',\n  'childViewContainer',\n  'childViewEventPrefix',\n  'childViewEvents',\n  'childViewOptions',\n  'childViewTriggers',\n  'className',\n  'collection',\n  'collectionEvents',\n  'el',\n  'emptyView',\n  'emptyViewOptions',\n  'events',\n  'id',\n  'model',\n  'modelEvents',\n  'sortWithCollection',\n  'tagName',\n  'template',\n  'templateContext',\n  'triggers',\n  'ui',\n  'viewComparator',\n  'viewFilter'\n];\n\n// A view that iterates over a Backbone.Collection\n// and renders an individual child view for each model.\nconst CollectionView = function(options) {\n  this.cid = uniqueId(this.cidPrefix);\n  this._setOptions(options, ClassOptions);\n\n  this.preinitialize.apply(this, arguments);\n\n  this._initViewEvents();\n  this.setElement(this._getEl());\n\n  monitorViewEvents(this);\n\n  this._initChildViewStorage();\n  this._initBehaviors();\n  this._buildEventProxies();\n\n  // Init empty region\n  this.getEmptyRegion();\n\n  this.initialize.apply(this, arguments);\n\n  this.delegateEntityEvents();\n\n  this._triggerEventOnBehaviors('initialize', this, options);\n};\n\n_extend(CollectionView, { extend, setRenderer, setDomApi, setEventDelegator });\n\n_extend(CollectionView.prototype, ViewMixin, {\n  cidPrefix: 'mncv',\n\n  // flag for maintaining the sorted order of the collection\n  sortWithCollection: true,\n\n  // Internal method to set up the `children` object for storing all of the child views\n  // `_children` represents all child views\n  // `children` represents only views filtered to be shown\n  _initChildViewStorage() {\n    this._children = new ChildViewContainer();\n    this.children = new ChildViewContainer();\n  },\n\n  // Create an region to show the emptyView\n  getEmptyRegion() {\n    const emptyEl = this.container || this.el;\n\n    if (this._emptyRegion && !this._emptyRegion.isDestroyed()) {\n      this._emptyRegion._setElement(emptyEl);\n      return this._emptyRegion;\n    }\n\n    this._emptyRegion = new Region({ el: emptyEl, replaceElement: false });\n\n    this._emptyRegion._parentView = this;\n\n    return this._emptyRegion;\n  },\n\n  // Configured the initial events that the collection view binds to.\n  _initialEvents() {\n    if (this._isRendered) { return; }\n\n    this.listenTo(this.collection, {\n      'sort': this._onCollectionSort,\n      'reset': this._onCollectionReset,\n      'update': this._onCollectionUpdate\n    });\n  },\n\n  // Internal method. This checks for any changes in the order of the collection.\n  // If the index of any view doesn't match, it will re-sort.\n  _onCollectionSort(collection, { add, merge, remove }) {\n    if (!this.sortWithCollection || this.viewComparator === false) {\n      return;\n    }\n\n    // If the data is changing we will handle the sort later in `_onCollectionUpdate`\n    if (add || remove || merge) {\n      return;\n    }\n\n    // If the only thing happening here is sorting, sort.\n    this.sort();\n  },\n\n  _onCollectionReset() {\n    this._destroyChildren();\n\n    this._addChildModels(this.collection.models);\n\n    this.sort();\n  },\n\n  // Handle collection update model additions and  removals\n  _onCollectionUpdate(collection, options) {\n    const changes = options.changes;\n\n    // Remove first since it'll be a shorter array lookup.\n    const removedViews = changes.removed.length && this._removeChildModels(changes.removed);\n\n    this._addedViews = changes.added.length && this._addChildModels(changes.added);\n\n    this._detachChildren(removedViews);\n\n    this.sort();\n\n    // Destroy removed child views after all of the render is complete\n    this._removeChildViews(removedViews);\n  },\n\n  _removeChildModels(models) {\n    return reduce(models, (views, model) => {\n      const removeView = this._removeChildModel(model);\n\n      if (removeView) { views.push(removeView); }\n\n      return views;\n    }, []);\n  },\n\n  _removeChildModel(model) {\n    const view = this._children.findByModel(model);\n\n    if (view) { this._removeChild(view); }\n\n    return view;\n  },\n\n  _removeChild(view) {\n    this.triggerMethod('before:remove:child', this, view);\n\n    this.children._remove(view);\n    this._children._remove(view);\n\n    this.triggerMethod('remove:child', this, view);\n  },\n\n  // Added views are returned for consistency with _removeChildModels\n  _addChildModels(models) {\n    return map(models, this._addChildModel.bind(this));\n  },\n\n  _addChildModel(model) {\n    const view = this._createChildView(model);\n\n    this._addChild(view);\n\n    return view;\n  },\n\n  _createChildView(model) {\n    const ChildView = this._getChildView(model);\n    const childViewOptions = this._getChildViewOptions(model);\n    const view = this.buildChildView(model, ChildView, childViewOptions);\n\n    return view;\n  },\n\n  _addChild(view, index) {\n    this.triggerMethod('before:add:child', this, view);\n\n    this._setupChildView(view);\n    this._children._add(view, index);\n    this.children._add(view, index);\n\n    this.triggerMethod('add:child', this, view);\n  },\n\n  // Retrieve the `childView` class\n  // The `childView` property can be either a view class or a function that\n  // returns a view class. If it is a function, it will receive the model that\n  // will be passed to the view instance (created from the returned view class)\n  _getChildView(child) {\n    let childView = this.childView;\n\n    if (!childView) {\n      throw new MarionetteError({\n        name: classErrorName,\n        message: 'A \"childView\" must be specified',\n        url: 'marionette.collectionview.html#collectionviews-childview'\n      });\n    }\n\n    childView = this._getView(childView, child);\n\n    if (!childView) {\n      throw new MarionetteError({\n        name: classErrorName,\n        message: '\"childView\" must be a view class or a function that returns a view class',\n        url: 'marionette.collectionview.html#collectionviews-childview'\n      });\n    }\n\n    return childView;\n  },\n\n  // First check if the `view` is a view class (the common case)\n  // Then check if it's a function (which we assume that returns a view class)\n  _getView(view, child) {\n    if (isViewClass(view)) {\n      return view;\n    } else if (isFunction(view)) {\n      return view.call(this, child);\n    }\n  },\n\n  _getChildViewOptions(child) {\n    if (isFunction(this.childViewOptions)) {\n      return this.childViewOptions(child);\n    }\n\n    return this.childViewOptions;\n  },\n\n  // Build a `childView` for a model in the collection.\n  // Override to customize the build\n  buildChildView(child, ChildViewClass, childViewOptions) {\n    const options = _extend({model: child}, childViewOptions);\n    return new ChildViewClass(options);\n  },\n\n  _setupChildView(view) {\n    monitorViewEvents(view);\n\n    // We need to listen for if a view is destroyed in a way other\n    // than through the CollectionView.\n    // If this happens we need to remove the reference to the view\n    // since once a view has been destroyed we can not reuse it.\n    view.on('destroy', this.removeChildView, this);\n\n    // set up the child view event forwarding\n    this._proxyChildViewEvents(view);\n  },\n\n  // used by ViewMixin's `_childViewEventHandler`\n  _getImmediateChildren() {\n    return this.children._views;\n  },\n\n  // Overriding Backbone.View's `setElement` to handle\n  // if an el was previously defined. If so, the view might be\n  // attached on setElement.\n  setElement(element) {\n    this._undelegateViewEvents();\n    this.el = element;\n    this._setBehaviorElements();\n\n    this._isAttached = this._isElAttached();\n\n    this._delegateViewEvents();\n\n    return this;\n  },\n\n  // Render children views.\n  render() {\n    if (this._isDestroyed) { return this; }\n    this.triggerMethod('before:render', this);\n\n    this._destroyChildren();\n\n    if (this.collection) {\n      this._addChildModels(this.collection.models);\n      this._initialEvents();\n    }\n\n    const template = this.getTemplate();\n\n    if (template) {\n      this._renderTemplate(template);\n      this.bindUIElements();\n    }\n    this._getChildViewContainer();\n    this.sort();\n\n    this._isRendered = true;\n\n    this.triggerMethod('render', this);\n    return this;\n  },\n\n  // Get a container within the template to add the children within\n  _getChildViewContainer() {\n    const childViewContainer = result(this, 'childViewContainer');\n    this.container = childViewContainer ? this.$(childViewContainer)[0] : this.el;\n\n    if (!this.container) {\n      throw new MarionetteError({\n        name: classErrorName,\n        message: `The specified \"childViewContainer\" was not found: ${childViewContainer}`,\n        url: 'marionette.collectionview.html#defining-the-childviewcontainer'\n      });\n    }\n  },\n\n  // Sorts the children then filters and renders the results.\n  sort() {\n    this._sortChildren();\n\n    this.filter();\n\n    return this;\n  },\n\n  // Sorts views by viewComparator and sets the children to the new order\n  _sortChildren() {\n    if (!this._children.length) { return; }\n\n    let viewComparator = this.getComparator();\n\n    if (!viewComparator) { return; }\n\n    // If children are sorted prevent added to end perf\n    delete this._addedViews;\n\n    this.triggerMethod('before:sort', this);\n\n    this._children._sort(viewComparator, this);\n\n    this.triggerMethod('sort', this);\n  },\n\n  // Sets the view's `viewComparator` and applies the sort if the view is ready.\n  // To prevent the render pass `{ preventRender: true }` as the 2nd argument.\n  setComparator(comparator, {preventRender} = {}) {\n    const comparatorChanged = this.viewComparator !== comparator;\n    const shouldSort = comparatorChanged && !preventRender;\n\n    this.viewComparator = comparator;\n\n    if (shouldSort) {\n      this.sort();\n    }\n\n    return this;\n  },\n\n  // Clears the `viewComparator` and follows the same rules for rendering as `setComparator`.\n  removeComparator(options) {\n    return this.setComparator(null, options);\n  },\n\n  // If viewComparator is overridden it will be returned here.\n  // Additionally override this function to provide custom\n  // viewComparator logic\n  getComparator() {\n    if (this.viewComparator) { return this.viewComparator }\n\n    if (!this.sortWithCollection || this.viewComparator === false || !this.collection) {\n      return false;\n    }\n\n    return this._viewComparator;\n  },\n\n  // Default internal view comparator that order the views by\n  // the order of the collection\n  _viewComparator(view) {\n    return this.collection.indexOf(view.model);\n  },\n\n  // This method filters the children views and renders the results\n  filter() {\n    if (this._isDestroyed) { return this; }\n\n    this._filterChildren();\n\n    this._renderChildren();\n\n    return this;\n  },\n\n  _filterChildren() {\n    if (!this._children.length) { return; }\n\n    const viewFilter = this._getFilter();\n\n    if (!viewFilter) {\n      const shouldReset = this.children.length !== this._children.length;\n\n      this.children._set(this._children._views, shouldReset);\n\n      return;\n    }\n\n    // If children are filtered prevent added to end perf\n    delete this._addedViews;\n\n    this.triggerMethod('before:filter', this);\n\n    const attachViews = [];\n    const detachViews = [];\n\n    each(this._children._views, (view, key, children) => {\n      (viewFilter.call(this, view, key, children) ? attachViews : detachViews).push(view);\n    });\n\n    this._detachChildren(detachViews);\n\n    // reset children\n    this.children._set(attachViews, true);\n\n    this.triggerMethod('filter', this, attachViews, detachViews);\n  },\n\n  // This method returns a function for the viewFilter\n  _getFilter() {\n    const viewFilter = this.getFilter();\n\n    if (!viewFilter) { return false; }\n\n    if (isFunction(viewFilter)) {\n      return viewFilter;\n    }\n\n    // Support filter predicates `{ fooFlag: true }`\n    if (isObject(viewFilter)) {\n      const matcher = matches(viewFilter);\n      return function(view) {\n        return matcher(view.model && view.model.attributes);\n      };\n    }\n\n    // Filter by model attribute\n    if (isString(viewFilter)) {\n      return function(view) {\n        return view.model && view.model.get(viewFilter);\n      };\n    }\n\n    throw new MarionetteError({\n      name: classErrorName,\n      message: '\"viewFilter\" must be a function, predicate object literal, a string indicating a model attribute, or falsy',\n      url: 'marionette.collectionview.html#defining-the-viewfilter'\n    });\n  },\n\n  // Override this function to provide custom\n  // viewFilter logic\n  getFilter() {\n    return this.viewFilter;\n  },\n\n  // Sets the view's `viewFilter` and applies the filter if the view is ready.\n  // To prevent the render pass `{ preventRender: true }` as the 2nd argument.\n  setFilter(filter, {preventRender} = {}) {\n    const filterChanged = this.viewFilter !== filter;\n    const shouldRender = filterChanged && !preventRender;\n\n    this.viewFilter = filter;\n\n    if (shouldRender) {\n      this.filter();\n    }\n\n    return this;\n  },\n\n  // Clears the `viewFilter` and follows the same rules for rendering as `setFilter`.\n  removeFilter(options) {\n    return this.setFilter(null, options);\n  },\n\n  _detachChildren(detachingViews) {\n    each(detachingViews, this._detachChildView.bind(this));\n  },\n\n  _detachChildView(view) {\n    const shouldTriggerDetach = view._isAttached && this.monitorViewEvents !== false;\n    if (shouldTriggerDetach) {\n      view.triggerMethod('before:detach', view);\n    }\n\n    this.detachHtml(view);\n\n    if (shouldTriggerDetach) {\n      view._isAttached = false;\n      view.triggerMethod('detach', view);\n    }\n\n    view._isShown = false;\n  },\n\n  // Override this method to change how the collectionView detaches a child view\n  detachHtml(view) {\n    this.Dom.detachEl(view.el);\n  },\n\n  _renderChildren() {\n    // If there are unrendered views prevent add to end perf\n    if (this._hasUnrenderedViews) {\n      delete this._addedViews;\n      delete this._hasUnrenderedViews;\n    }\n\n    const views = this._addedViews || this.children._views;\n\n    this.triggerMethod('before:render:children', this, views);\n\n    if (this.isEmpty()) {\n      this._showEmptyView();\n    } else {\n      this._destroyEmptyView();\n\n      const els = this._getBuffer(views);\n\n      this._attachChildren(els, views);\n    }\n\n    delete this._addedViews;\n\n    this.triggerMethod('render:children', this, views);\n  },\n\n  // Renders each view and creates a fragment buffer from them\n  _getBuffer(views) {\n    const elBuffer = this.Dom.createBuffer();\n\n    each(views, view => {\n      renderView(view);\n      // corresponds that view is shown in a Region or CollectionView\n      view._isShown = true;\n      this.Dom.appendContents(elBuffer, view.el);\n    });\n\n    return elBuffer;\n  },\n\n  _attachChildren(els, views) {\n    const shouldTriggerAttach = this._isAttached && this.monitorViewEvents !== false;\n\n    views = shouldTriggerAttach ? views : [];\n\n    each(views, view => {\n      if (view._isAttached) { return; }\n      view.triggerMethod('before:attach', view);\n    });\n\n    this.attachHtml(els, this.container);\n\n    each(views, view => {\n      if (view._isAttached) { return; }\n      view._isAttached = true;\n      view.triggerMethod('attach', view);\n    });\n  },\n\n  // Override this method to do something other than `.append`.\n  // You can attach any HTML at this point including the els.\n  attachHtml(els, container) {\n    this.Dom.appendContents(container, els);\n  },\n\n  isEmpty() {\n    return !this.children.length;\n  },\n\n  _showEmptyView() {\n    const EmptyView = this._getEmptyView();\n\n    if (!EmptyView) {\n      return;\n    }\n\n    const options = this._getEmptyViewOptions();\n\n    const emptyRegion = this.getEmptyRegion();\n\n    emptyRegion.show(new EmptyView(options));\n  },\n\n  // Retrieve the empty view class\n  _getEmptyView() {\n    const emptyView = this.emptyView;\n\n    if (!emptyView) { return; }\n\n    return this._getView(emptyView);\n  },\n\n  // Remove the emptyView\n  _destroyEmptyView() {\n    const emptyRegion = this.getEmptyRegion();\n    // Only empty if a view is show so the region\n    // doesn't detach any other unrelated HTML\n    if (emptyRegion.hasView()) {\n      emptyRegion.empty();\n    }\n  },\n\n  //\n  _getEmptyViewOptions() {\n    const emptyViewOptions = this.emptyViewOptions || this.childViewOptions;\n\n    if (isFunction(emptyViewOptions)) {\n      return emptyViewOptions.call(this);\n    }\n\n    return emptyViewOptions;\n  },\n\n  swapChildViews(view1, view2) {\n    if (!this._children.hasView(view1) || !this._children.hasView(view2)) {\n      throw new MarionetteError({\n        name: classErrorName,\n        message: 'Both views must be children of the collection view to swap.',\n        url: 'marionette.collectionview.html#swapping-child-views'\n      });\n    }\n\n    this._children._swap(view1, view2);\n    this.Dom.swapEl(view1.el, view2.el);\n\n    // If the views are not filtered the same, refilter\n    if (this.children.hasView(view1) !== this.children.hasView(view2)) {\n      this.filter();\n    } else {\n      this.children._swap(view1, view2);\n    }\n\n    return this;\n  },\n\n  // Render the child's view and add it to the HTML for the collection view at a given index, based on the current sort\n  addChildView(view, index, options = {}) {\n    if (!view || view._isDestroyed) {\n      return view;\n    }\n\n    if (view._isShown) {\n      throw new MarionetteError({\n        name: classErrorName,\n        message: 'View is already shown in a Region or CollectionView',\n        url: 'marionette.region.html#showing-a-view'\n      });\n    }\n\n    if (isObject(index)) {\n      options = index;\n    }\n\n    // If options has defined index we should use it\n    if (options.index != null) {\n      index = options.index;\n    }\n\n    if (!this._isRendered) {\n      this.render();\n    }\n\n    this._addChild(view, index);\n\n    if (options.preventRender) {\n      this._hasUnrenderedViews = true;\n      return view;\n    }\n\n    const hasIndex = (typeof index !== 'undefined');\n    const isAddedToEnd = !hasIndex || index >= this._children.length;\n\n    // Only cache views if added to the end and there is no unrendered views\n    if (isAddedToEnd && !this._hasUnrenderedViews) {\n      this._addedViews = [view];\n    }\n\n    if (hasIndex) {\n      this._renderChildren();\n    } else {\n      this.sort();\n    }\n\n    return view;\n  },\n\n  // Detach a view from the children.  Best used when adding a\n  // childView from `addChildView`\n  detachChildView(view) {\n    this.removeChildView(view, { shouldDetach: true });\n\n    return view;\n  },\n\n  // Remove the child view and destroy it.  Best used when adding a\n  // childView from `addChildView`\n  // The options argument is for internal use only\n  removeChildView(view, options) {\n    if (!view) {\n      return view;\n    }\n\n    this._removeChildView(view, options);\n\n    this._removeChild(view);\n\n    if (this.isEmpty()) {\n      this._showEmptyView();\n    }\n\n    return view;\n  },\n\n  _removeChildViews(views) {\n    each(views, this._removeChildView.bind(this));\n  },\n\n  _removeChildView(view, {shouldDetach} = {}) {\n    view.off('destroy', this.removeChildView, this);\n\n    if (shouldDetach) {\n      this._detachChildView(view);\n    } else {\n      this._destroyChildView(view);\n    }\n\n    this.stopListening(view);\n  },\n\n  _destroyChildView(view) {\n    if (view._isDestroyed) {\n      return;\n    }\n\n    const shouldDisableEvents = this.monitorViewEvents === false;\n    destroyView(view, shouldDisableEvents);\n  },\n\n  // called by ViewMixin destroy\n  _removeChildren() {\n    this._destroyChildren();\n    const emptyRegion = this.getEmptyRegion();\n    emptyRegion.destroy();\n    delete this._addedViews;\n  },\n\n  // Destroy the child views that this collection view is holding on to, if any\n  _destroyChildren() {\n    if (!this._children.length) {\n      return;\n    }\n\n    this.triggerMethod('before:destroy:children', this);\n    if (this.monitorViewEvents === false) {\n      this.Dom.detachContents(this.el);\n    }\n\n    this._removeChildViews(this._children._views);\n\n    // After all children have been destroyed re-init the container\n    this._children._init();\n    this.children._init();\n\n    this.triggerMethod('destroy:children', this);\n  }\n});\n\n\nexport default CollectionView;\n","// Behavior\n// --------\n\n// A Behavior is an isolated set of DOM /\n// user interactions that can be mixed into any View.\n// Behaviors allow you to blackbox View specific interactions\n// into portable logical chunks, keeping your views simple and your code DRY.\n\nimport { extend as _extend, uniqueId, result } from 'underscore';\nimport extend from '../utils/extend';\nimport CommonMixin from '../mixins/common';\nimport DelegateEntityEventsMixin from '../mixins/delegate-entity-events';\nimport UIMixin from '../mixins/ui';\nimport ViewEventsMixin from '../mixins/view-events';\n\nconst ClassOptions = [\n  'collectionEvents',\n  'events',\n  'modelEvents',\n  'triggers',\n  'ui'\n];\n\nconst Behavior = function(options, view) {\n  // Setup reference to the view.\n  // this comes in handle when a behavior\n  // wants to directly talk up the chain\n  // to the view.\n  this.view = view;\n\n\n  this._setOptions(options, ClassOptions);\n  this.cid = uniqueId(this.cidPrefix);\n\n  this._initViewEvents();\n  this.setElement();\n\n  // Construct an internal UI hash using the behaviors UI\n  // hash combined and overridden by the view UI hash.\n  // This allows the user to use UI hash elements defined\n  // in the parent view as well as those defined in the behavior.\n  // This order will help the reuse and share of a behavior\n  // between multiple views, while letting a view override\n  // a selector under an UI key.\n  this.ui = _extend({}, result(this, 'ui'), result(view, 'ui'));\n\n  // Proxy view triggers\n  this.listenTo(view, 'all', this.triggerMethod);\n\n  this.initialize.apply(this, arguments);\n};\n\nBehavior.extend = extend;\n\n// Behavior Methods\n// --------------\n\n_extend(Behavior.prototype, CommonMixin, DelegateEntityEventsMixin, UIMixin, ViewEventsMixin, {\n  cidPrefix: 'mnb',\n\n  // proxy behavior $ method to the view\n  // this is useful for doing jquery DOM lookups\n  // scoped to behaviors view.\n  $() {\n    return this.view.$.apply(this.view, arguments);\n  },\n\n  // Stops the behavior from listening to events.\n  destroy() {\n    this._undelegateViewEvents();\n\n    this.stopListening();\n\n    this.view._removeBehavior(this);\n\n    this._deleteEntityEventHandlers();\n\n    return this;\n  },\n\n  setElement() {\n    this._undelegateViewEvents();\n\n    this.el = this.view.el;\n\n    this._delegateViewEvents(this.view);\n\n    return this;\n  },\n\n  bindUIElements() {\n    this._bindUIElements();\n\n    return this;\n  },\n\n  unbindUIElements() {\n    this._unbindUIElements();\n\n    return this;\n  },\n\n  getUI(name) {\n    return this._getUI(name);\n  },\n\n  // Handle `modelEvents`, and `collectionEvents` configuration\n  delegateEntityEvents() {\n    this._delegateEntityEvents(this.view.model, this.view.collection);\n\n    return this;\n  },\n\n  undelegateEntityEvents() {\n    this._undelegateEntityEvents(this.view.model, this.view.collection);\n\n    return this;\n  }\n});\n\nexport default Behavior;\n","// Application\n// -----------\n\nimport { extend as _extend, uniqueId } from 'underscore';\nimport extend from '../utils/extend';\nimport buildRegion from './common/build-region';\nimport CommonMixin from '../mixins/common';\nimport DestroyMixin from '../mixins/destroy';\nimport RadioMixin from '../mixins/radio';\nimport Region from './region';\n\nconst ClassOptions = [\n  'channelName',\n  'radioEvents',\n  'radioRequests',\n  'region',\n  'regionClass'\n];\n\nconst Application = function(options) {\n  this._setOptions(options, ClassOptions);\n  this.cid = uniqueId(this.cidPrefix);\n  this._initRegion();\n  this._initRadio();\n  this.initialize.apply(this, arguments);\n};\n\nApplication.extend = extend;\n\n// Application Methods\n// --------------\n\n_extend(Application.prototype, CommonMixin, DestroyMixin, RadioMixin, {\n  cidPrefix: 'mna',\n\n  // Kick off all of the application's processes.\n  start(options) {\n    this.triggerMethod('before:start', this, options);\n    this.triggerMethod('start', this, options);\n    return this;\n  },\n\n  regionClass: Region,\n\n  _initRegion() {\n    const region = this.region;\n\n    if (!region) { return; }\n\n    const defaults = {\n      regionClass: this.regionClass\n    };\n\n    this._region = buildRegion(region, defaults);\n  },\n\n  getRegion() {\n    return this._region;\n  },\n\n  showView(view, ...args) {\n    const region = this.getRegion();\n    region.show(view, ...args);\n    return view;\n  },\n\n  getView() {\n    return this.getRegion().currentView;\n  }\n});\n\nexport default Application;\n","import proxy from './utils/proxy.js';\nimport extend from './utils/extend';\nimport { version as VERSION } from './version';\n\nimport {\n  bindEvents as _bindEvents,\n  unbindEvents as _unbindEvents\n} from './modules/common/bind-events.js';\nimport {\n  bindRequests as _bindRequests,\n  unbindRequests as _unbindRequests\n} from './modules/common/bind-requests';\nimport _getOption from './modules/common/get-option';\nimport _mergeOptions from './modules/common/merge-options';\nimport monitorViewEvents from './modules/common/monitor-view-events';\nimport _normalizeMethods from './modules/common/normalize-methods';\nimport _triggerMethod from './modules/common/trigger-method';\n\nimport Events from './mixins/events';\nimport Requests from './mixins/requests';\n\nimport MnObject from './modules/object';\nimport View from './modules/view';\nimport CollectionView from './modules/collection-view';\nimport Behavior from './modules/behavior';\nimport Region from './modules/region';\nimport Application from './modules/application';\nimport Radio from './modules/radio';\n\nimport DomApi from './config/dom';\n\nimport {\n  isEnabled,\n  setEnabled\n} from './config/features';\n\n// Utilities\n\nexport const bindEvents = proxy(_bindEvents);\nexport const unbindEvents = proxy(_unbindEvents);\nexport const bindRequests = proxy(_bindRequests);\nexport const unbindRequests = proxy(_unbindRequests);\nexport const mergeOptions = proxy(_mergeOptions);\nexport const getOption = proxy(_getOption);\nexport const normalizeMethods = proxy(_normalizeMethods);\nexport const triggerMethod = proxy(_triggerMethod);\n\n\n// Configuration\n\nexport const setDomApi = function(mixin) {\n  CollectionView.setDomApi(mixin);\n  Region.setDomApi(mixin);\n  View.setDomApi(mixin);\n};\nexport const setRenderer = function(renderer) {\n  CollectionView.setRenderer(renderer);\n  View.setRenderer(renderer);\n};\n\nexport const setEventDelegator = function(delegator) {\n  CollectionView.setEventDelegator(delegator);\n  View.setEventDelegator(delegator);\n};\n\nexport {\n  View,\n  CollectionView,\n  MnObject,\n  Region,\n  Behavior,\n  Application,\n  Radio,\n  isEnabled,\n  setEnabled,\n  monitorViewEvents,\n  Events,\n  Requests,\n  extend,\n  DomApi,\n  VERSION,\n};\n"],"names":["proxy","method","context","args","apply","protoProps","staticProps","child","parent","this","has","constructor","arguments","extend","prototype","create","__super__","version","normalizeMethods","hash","reduce","normalizedHash","name","isFunction","_this","errorProps","MarionetteError","call","Error","urlRoot","url","options","error","message","_extend","pick","captureStackTrace","toString","normalizeBindings","bindings","isObject","bindEvents","entity","listenTo","unbindEvents","stopListening","bindRequests","channel","reply","unbindRequests","stopReplying","getOption","optionName","undefined","mergeOptions","keys","each","key","option","triggerMethodChildren","view","event","shouldTrigger","_getImmediateChildren","triggerMethod","shouldTriggerAttach","_isAttached","shouldAttach","shouldTriggerDetach","shouldDetach","triggerDOMRefresh","_isRendered","triggerDOMRemove","handleBeforeAttach","handleAttach","handleBeforeDetach","handleDetach","handleBeforeRender","handleRender","monitorViewEvents","_areViewEventsMonitored","on","splitter","methodCache","getEventName","match","prefix","eventName","toUpperCase","getOnMethodName","replace","result","methodName","trigger","eventSplitter","buildEventArgs","callback","listener","_typeof","eventArgs","concat","test","split","n","push","callHandler","length","onceWrap","offCallback","onceCallback","once","_callback","onApi","events","ctx","onReducer","onceReducer","off","bind","cleanupListener","obj","listeneeId","listenerId","listeningTo","_rdListeners","offReducer","names","handlers","remaining","handler","count","getListener","listenerObj","_rdListenId","uniqueId","_rdEvents","_rdListeningTo","listenToApi","listeners","_rdInternal","listenToOnceApi","triggerApi","objEvents","allEvents","all","slice","triggerEvents","opts","listenToOnce","listenerIds","i","listenToObj","_reInternal","_this2","shouldDebug","debugLog","warning","channelName","console","warn","debugText","log","makeCallback","replyReducer","isOnce","requests","stopReducer","_rdRequests","replyOnce","request","replies","_tunedIn","default","CommonMixin","initialize","_setOptions","classOptions","EventsMixin","RequestsMixin","_isDestroyed","isDestroyed","destroy","_logs","_partial","Radio","setDebug","setShouldDebug","tuneIn","tuneOut","_channels","Channel","Events","Requests","reset","system","channels","_initRadio","_channel","radioEvents","radioRequests","_destroyRadio","getChannel","ClassOptions","MarionetteObject","cid","cidPrefix","parseBehaviors","behaviors","allBehaviors","reducedBehaviors","behaviorDefiniton","behaviorClass","BehaviorClass","getBehaviorClass","behavior","DestroyMixin","RadioMixin","_initBehaviors","_behaviors","_getBehaviorTriggers","triggers","map","_getTriggers","memo","_triggers","_getBehaviorEvents","_getEvents","_events","_setBehaviorElements","setElement","_delegateBehaviorEntityEvents","delegateEntityEvents","_undelegateBehaviorEntityEvents","undelegateEntityEvents","_destroyBehaviors","_removeBehavior","undelegate","without","_bindBehaviorUIElements","bindUIElements","_unbindBehaviorUIElements","unbindUIElements","_triggerEventOnBehaviors","_delegateEntityEvents","model","collection","_modelEvents","_collectionEvents","_undelegateEntityEvents","_deleteEntityEventHandlers","_renderTemplate","template","data","mixinTemplateContext","serializeData","html","_renderHtml","attachElContent","getTemplate","serializedData","templateContext","serializeModel","items","serializeCollection","attributes","models","Dom","setContents","el","normalizeUIKeys","ui","val","normalizeUIString","uiRegEx","uiString","r","normalizeUIValues","property","isString","propertyVal","uiBindings","_getUIBindings","_bindUIElements","_uiBindings","_ui","selector","$","_unbindUIElements","$el","_getUI","FEATURES","childViewEventPrefix","triggersStopPropagation","triggersPreventDefault","DEV_MODE","isEnabled","setEventDelegator","mixin","EventDelegator","delegateEventSplitter","shouldCapture","indexOf","delegate","rootEl","delegateHandler","evt","node","target","parentNode","Element","matches","delegateTarget","addEventListener","undelegateAll","removeEventListener","_initViewEvents","_domEvents","_undelegateViewEvents","_delegateViewEvents","_delegateEvents","_delegateTriggers","_delegate","value","triggerDef","shouldPreventDefault","preventDefault","shouldStopPropagation","stopPropagation","buildViewTrigger","setDomApi","createElement","tagName","document","createBuffer","createDocumentFragment","getDocumentEl","ownerDocument","documentElement","findEl","querySelectorAll","hasEl","childEl","contains","detachEl","removeChild","replaceEl","newEl","oldEl","replaceChild","swapEl","el1","el2","parent1","parent2","next1","nextSibling","next2","insertBefore","innerHTML","setAttributes","attrs","attr","setAttribute","appendContents","contents","appendChild","hasContents","hasChildNodes","detachContents","textContent","ViewMixin","preinitialize","DomApi","_getEl","id","className","class","_isElAttached","supportsRenderLifecycle","supportsDestroyLifecycle","isRendered","isAttached","_isDestroying","_disableDetachEvents","_removeChildren","getUI","_buildEventProxies","_childViewEvents","_childViewTriggers","_eventPrefix","_getEventPrefix","defaultPrefix","_proxyChildViewEvents","_childViewEventHandler","childViewEvents","childViewTriggers","renderView","render","destroyView","disableDetachEvents","remove","BehaviorsMixin","DelegateEntityEventsMixin","TemplateRenderMixin","UIMixin","ViewEvents","classErrorName","Region","_initEl","definition","defaults","buildRegionFromObject","regionClass","RegionClass","replaceElement","_isReplaced","_isSwappingView","show","_ensureElement","_getView","currentView","_isShown","empty","_setupChildView","_attachView","_setEl","getEl","_setElement","shouldReplace","_restoreEl","_replaceEl","attachHtml","_empty","parentView","_parentView","_shouldDisableMonitoring","shouldReplaceEl","allowMissingEl","isView","viewOptions","_getViewOptions","View","_detachView","isReplaced","isSwappingView","detachHtml","shouldDestroy","removeView","_stopChildViewEvents","detachView","shouldRestoreEl","hasView","_name","_removeReferences","_initRegions","regions","_regions","addRegions","_reInitRegions","region","addRegion","isEmpty","_addRegions","regionDefinitions","parentEl","partial","buildRegion","_addRegion","removeRegion","_removeRegion","removeRegions","_getRegions","emptyRegions","getRegions","hasRegion","getRegion","clone","showChildView","detachChildView","getChildView","setRenderer","renderer","childReducer","children","RegionsMixin","element","_","forEach","find","detect","filter","select","reject","every","some","any","include","invoke","toArray","first","initial","rest","last","pluck","partition","Container","_init","stringComparator","comparator","get","_views","_viewsByCid","_indexByModel","_updateLength","_add","index","_addViewIndexes","splice","_sort","_sortBy","sort","sortedViews","sortBy","_set","views","shouldReset","_swap","view1","view2","view1Index","findIndexByView","view2Index","swapView","findByModel","findByModelCid","modelCid","findByIndex","findByCid","_remove","CollectionView","_initChildViewStorage","getEmptyRegion","sortWithCollection","_children","ChildViewContainer","emptyEl","container","_emptyRegion","_initialEvents","_onCollectionSort","_onCollectionReset","_onCollectionUpdate","add","merge","viewComparator","_destroyChildren","_addChildModels","changes","removedViews","removed","_removeChildModels","_addedViews","added","_detachChildren","_removeChildViews","_removeChildModel","_removeChild","_addChildModel","_createChildView","_addChild","ChildView","_getChildView","childViewOptions","_getChildViewOptions","buildChildView","childView","ViewClass","ChildViewClass","removeChildView","_getChildViewContainer","childViewContainer","_sortChildren","getComparator","setComparator","preventRender","comparatorChanged","shouldSort","removeComparator","_viewComparator","_filterChildren","_renderChildren","viewFilter","_getFilter","attachViews","detachViews","getFilter","matcher","setFilter","filterChanged","shouldRender","removeFilter","detachingViews","_detachChildView","_hasUnrenderedViews","_showEmptyView","_destroyEmptyView","els","_getBuffer","_attachChildren","elBuffer","_this3","EmptyView","_getEmptyView","_getEmptyViewOptions","emptyView","emptyRegion","emptyViewOptions","swapChildViews","addChildView","hasIndex","isAddedToEnd","_removeChildView","_destroyChildView","Behavior","ViewEventsMixin","Application","_initRegion","start","_region","showView","getView","_bindEvents","_unbindEvents","_bindRequests","_unbindRequests","_mergeOptions","_getOption","_normalizeMethods","_triggerMethod","state","delegator"],"mappings":"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"}